"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomComponents = exports._SelectMenu = exports.CustomMenuItem = exports.Aynsc = exports.Suggestion = exports.Default = void 0;
var addon_actions_1 = require("@storybook/addon-actions");
var addon_knobs_1 = require("@storybook/addon-knobs");
var react_1 = __importDefault(require("react"));
var HFlow_1 = require("../HFlow");
var Text_1 = require("../Text");
var Button_1 = require("../Button");
var SelectAsync_1 = require("./SelectAsync");
var SelectDownshiftMenu_1 = require("./SelectSingle/SelectDownshiftMenu");
var _1 = require("./");
var fruits = [
    { value: 1, label: 'Apple' },
    { value: 2, label: 'Avocado' },
    { value: 3, label: 'Banana' },
    { value: 4, label: 'Blueberry' },
    { value: 5, label: 'Coconut' },
    { value: 6, label: 'Grape' },
    { value: 7, label: 'Lemon' },
    { value: 8, label: 'Mango' },
    { value: 9, label: 'Melon' },
    { value: 10, label: 'Orange' },
    { value: 11, label: 'Peach' },
    { value: 12, label: 'Pear' },
];
var loadFruits = function (query) {
    addon_actions_1.action('items loaded')();
    return new Promise(function (resolve) {
        setTimeout(function () { return resolve(_1.defaultSelectFilter(__spreadArrays(fruits), query, function (item) { return item.label; })); }, 1000);
    });
};
exports.default = {
    title: 'Components/Select',
};
exports.Default = function () { return (react_1.default.createElement(_1.Select, { label: 'Fruit', name: 'fruit', items: fruits, error: addon_knobs_1.text('error', ''), required: addon_knobs_1.boolean('required', false), inline: addon_knobs_1.boolean('inline', false), menuMinWidth: addon_knobs_1.number('menuMinWidth (px)', undefined), itemToString: function (item) { return item && item.label; }, itemIsEqual: function (a, b) { return a.value === b.value; }, placeholder: 'Select a value...', multiple: addon_knobs_1.boolean('multiple', false), clearable: addon_knobs_1.boolean('clearable', true), disabled: addon_knobs_1.boolean('disabled', false), openOnFocus: addon_knobs_1.boolean('openOnFocus', true), loading: addon_knobs_1.boolean('loading', false), onChange: addon_actions_1.action('changed'), onBlur: addon_actions_1.action('blur'), onFocus: addon_actions_1.action('focus') })); };
exports.Suggestion = function () { return (react_1.default.createElement(_1.Select, { label: 'Fruit', name: 'fruit', items: fruits, error: addon_knobs_1.text('error', ''), icon: null, createNewItem: function (str) { return ({ value: str, label: str }); }, itemToString: function (item) { return item && item.label; }, itemIsEqual: function (a, b) { return a.value === b.value; }, placeholder: 'Select a value...', multiple: addon_knobs_1.boolean('multiple', false), clearable: addon_knobs_1.boolean('clearable', true), disabled: addon_knobs_1.boolean('disabled', false), openOnFocus: addon_knobs_1.boolean('openOnFocus', false), loading: addon_knobs_1.boolean('loading', false), onChange: addon_actions_1.action('changed'), onBlur: addon_actions_1.action('blur'), onFocus: addon_actions_1.action('focus') })); };
exports.Aynsc = function () { return (react_1.default.createElement(SelectAsync_1.SelectAsync, { label: 'Repository', name: 'repository', loadItems: loadFruits, error: addon_knobs_1.text('error', ''), itemToString: function (item) { return item && item.label; }, itemIsEqual: function (a, b) { return a.value === b.value; }, placeholder: 'Select a value...', multiple: addon_knobs_1.boolean('multiple', false), clearable: addon_knobs_1.boolean('clearable', true), disabled: addon_knobs_1.boolean('disabled', false), openOnFocus: addon_knobs_1.boolean('openOnFocus', true), onChange: addon_actions_1.action('changed'), onBlur: addon_actions_1.action('blur'), onFocus: addon_actions_1.action('focus') })); };
exports.CustomMenuItem = function () { return (react_1.default.createElement(_1.Select, { renderItem: function (item) { return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement("p", null,
            react_1.default.createElement("strong", null, item.label)),
        react_1.default.createElement("p", null, "yummy"))); }, label: 'Fruit', name: 'fruit', items: fruits, error: addon_knobs_1.text('error', ''), itemToString: function (item) { return item && item.label; }, itemIsEqual: function (a, b) { return a.value === b.value; }, placeholder: 'Select a value...', multiple: addon_knobs_1.boolean('multiple', false), clearable: addon_knobs_1.boolean('clearable', true), disabled: addon_knobs_1.boolean('disabled', false), openOnFocus: addon_knobs_1.boolean('openOnFocus', true), loading: addon_knobs_1.boolean('loading', false), onChange: addon_actions_1.action('changed'), onBlur: addon_actions_1.action('blur'), onFocus: addon_actions_1.action('focus') })); };
exports._SelectMenu = function () { return (react_1.default.createElement(_1.SelectMenu, { style: { position: 'static' } },
    react_1.default.createElement(_1.SelectMenuItem, null, "Item 1"),
    react_1.default.createElement(_1.SelectMenuItem, { selected: true }, "Item 2 (selected)"),
    react_1.default.createElement(_1.SelectMenuItem, null, "Item 3"),
    react_1.default.createElement(_1.SelectMenuItem, null, "Item 4"),
    react_1.default.createElement(_1.SelectMenuItem, null, "Item 5"))); };
exports.CustomComponents = function () { return (react_1.default.createElement(_1.Select, { label: 'Fruit', name: 'fruit', items: fruits, itemToString: function (item) { return item && item.label; }, components: {
        PrependItem: function (props) { return react_1.default.createElement(SelectDownshiftMenu_1.SelectDownshiftComponentCustom, null, "Prepend item"); },
        AppendItem: function (props) { return (react_1.default.createElement(SelectDownshiftMenu_1.SelectDownshiftComponentCustom, null,
            react_1.default.createElement(HFlow_1.HFlow, { alignItems: 'center', justifyContent: 'space-between' },
                react_1.default.createElement(Text_1.Text, null, "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Maxime quod modi, inventore quasi aut sed beatae corrupti repellendus minima voluptatem debitis, quibusdam repudiandae totam voluptatum odit."),
                react_1.default.createElement(Button_1.Button, { kind: 'primary', size: 'small', onClick: addon_actions_1.action('New item click') }, "New item")))); },
    } })); };
//# sourceMappingURL=Select.stories.js.map