"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InternalDraggable = void 0;
var react_1 = __importDefault(require("react"));
var react_dnd_1 = require("react-dnd");
var __1 = require("../..");
var styles_1 = require("../../../styles");
var DraggableWrapper_1 = require("./DraggableWrapper");
var style_1 = require("./style");
var util_1 = require("./util");
function InternalDraggable(props) {
    var name = props.name, origin = props.origin, value = props.value, onDragEnd = props.onDragEnd, onKeyNav = props.onKeyNav, type = props.type;
    var classes = styles_1.useStyles(style_1.draggableCreateStyles).classes;
    var _a = react_dnd_1.useDrag({
        item: { type: type, name: name, origin: origin },
        end: function (_item, monitor) {
            if (monitor.getDropResult()['result'])
                onDragEnd();
        },
        collect: function (monitor) { return ({
            isDragging: !!monitor.isDragging(),
        }); },
    }), isDragging = _a[0].isDragging, drag = _a[1];
    var handleKeyDown = function (event) {
        if (onKeyNav) {
            onKeyNav(util_1.getKeyDirection(event.nativeEvent.key), origin);
            onDragEnd();
        }
    };
    return (react_1.default.createElement(DraggableWrapper_1.DraggableWrapper, { drag: drag, isDragging: isDragging },
        react_1.default.createElement(__1.Button, { style: [classes.button, 'padding-right: 1.25rem;'], onKeyDown: handleKeyDown, size: 'small', kind: 'primary', skin: 'ghost' },
            react_1.default.createElement(__1.HFlow, { hSpacing: 0.5 },
                react_1.default.createElement(__1.Icon, { icon: 'dragdrop' }),
                value))));
}
exports.InternalDraggable = InternalDraggable;
//# sourceMappingURL=InternalDraggable.js.map