"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Default = void 0;
var react_1 = __importStar(require("react"));
var react_dnd_1 = require("react-dnd");
var react_dnd_html5_backend_1 = require("react-dnd-html5-backend");
var HFlow_1 = require("../../HFlow");
var Box_1 = require("../Box/Box");
var Droppable_1 = require("./Droppable");
exports.default = {
    title: 'Components/PivotTable/Droppable',
};
var keyMapping = new Map([
    ['name', { keyName: 'Name' }],
    ['size', { keyName: 'Size' }],
]);
var keys = new Map([
    ['name', ['Apple', 'Banana', 'Blackberry', 'Lemon', 'Orange', 'Watermelon']],
    ['size', ['Medium', 'Small', 'Big']],
]);
var deepCopy = new Map();
keys.forEach(function (value, key) { return deepCopy.set(key, new Set(value)); });
exports.Default = function () {
    var _a = react_1.useState(Array.from(keys.keys())), defaultKeys = _a[0], setDefaultKeys = _a[1];
    var _b = react_1.useState([]), rowKeys = _b[0], setRowKeys = _b[1];
    var _c = react_1.useState(new Map(deepCopy)), filterState = _c[0], setFilterState = _c[1];
    var handleFilterUpdate = function (key, filter) {
        if (filter.size < 1) {
            filterState.delete(key);
        }
        else {
            filterState.set(key, filter);
        }
        setFilterState(new Map(filterState));
    };
    var filter = {
        handleUpdate: handleFilterUpdate,
        keys: keys,
        state: filterState,
    };
    return (react_1.default.createElement(react_dnd_1.DndProvider, { backend: react_dnd_html5_backend_1.HTML5Backend },
        react_1.default.createElement(HFlow_1.HFlow, null,
            react_1.default.createElement(Box_1.Box, { label: 'Table 1' },
                react_1.default.createElement(Droppable_1.Droppable, { name: 'table1', keyState: defaultKeys, accept: 'fruit-table', keyMapping: keyMapping, handleKeyUpdate: setDefaultKeys, filter: filter })),
            react_1.default.createElement(Box_1.Box, { label: 'Table 2' },
                react_1.default.createElement(Droppable_1.Droppable, { name: 'table2', keyState: rowKeys, accept: 'fruit-table', keyMapping: keyMapping, handleKeyUpdate: setRowKeys, filter: filter })))));
};
//# sourceMappingURL=Droppable.stories.js.map