[{"/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/index.tsx":"1","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/App.tsx":"2","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/view/DeskView.tsx":"3","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/view/UserView.tsx":"4","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/view/FinalSummary.tsx":"5","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/view/LoginView.tsx":"6","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/view/ListUsersView.tsx":"7","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/Helpers.ts":"8","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/RepeatComponent.tsx":"9","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/ModalOrder.tsx":"10","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/Header.tsx":"11","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/PageContainer.tsx":"12","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/ModalConfirm.tsx":"13","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/FormProfile.tsx":"14","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/FormLogin.tsx":"15","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/AccordionFinalSummary.tsx":"16","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/ModalForgetPassword.tsx":"17","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/SelectItemsOrder.tsx":"18","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/TableOrders.tsx":"19","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/Total.tsx":"20","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/Menu.tsx":"21"},{"size":150,"mtime":1686767089472,"results":"22","hashOfConfig":"23"},{"size":825,"mtime":1687831512376,"results":"24","hashOfConfig":"23"},{"size":4028,"mtime":1687856787160,"results":"25","hashOfConfig":"23"},{"size":1434,"mtime":1687816374902,"results":"26","hashOfConfig":"23"},{"size":787,"mtime":1687832566819,"results":"27","hashOfConfig":"23"},{"size":1889,"mtime":1687661785972,"results":"28","hashOfConfig":"23"},{"size":5096,"mtime":1687811074278,"results":"29","hashOfConfig":"23"},{"size":3218,"mtime":1687852527655,"results":"30","hashOfConfig":"23"},{"size":647,"mtime":1687678038826,"results":"31","hashOfConfig":"23"},{"size":6706,"mtime":1687779942924,"results":"32","hashOfConfig":"23"},{"size":1306,"mtime":1687833160414,"results":"33","hashOfConfig":"23"},{"size":496,"mtime":1687640171705,"results":"34","hashOfConfig":"23"},{"size":1510,"mtime":1687804983085,"results":"35","hashOfConfig":"23"},{"size":9151,"mtime":1687853108478,"results":"36","hashOfConfig":"23"},{"size":3577,"mtime":1687853131834,"results":"37","hashOfConfig":"23"},{"size":4747,"mtime":1687832838518,"results":"38","hashOfConfig":"23"},{"size":1343,"mtime":1687802557098,"results":"39","hashOfConfig":"23"},{"size":1168,"mtime":1687751447360,"results":"40","hashOfConfig":"23"},{"size":2299,"mtime":1687780002969,"results":"41","hashOfConfig":"23"},{"size":723,"mtime":1687740517749,"results":"42","hashOfConfig":"23"},{"size":2347,"mtime":1687816333511,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"epert8",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/index.tsx",[],[],[],"/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/App.tsx",[],[],"/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/view/DeskView.tsx",["111","112"],[],"/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/view/UserView.tsx",["113"],[],"import { VFlow } from \"bold-ui\";\nimport React, { useState } from \"react\";\nimport { Header } from \"../components/Header\";\nimport { PageContainer } from \"../components/PageContainer\";\nimport { useLocation } from \"react-router-dom\";\nimport { typesEmployees, usuarios } from \"../components/Helpers\";\nimport { UserType } from \"./ListUsersView\";\nimport { FormProfile } from \"../components/FormProfile\";\n\nexport interface OptionType {\n  value: number;\n  label: string;\n}\n\nexport function UserView() {\n  const location = useLocation();\n  const { id, editProfile, listUsers, addUser, viewProfile } = location.state;\n\n  console.log(location.state);\n  const findUserById = (userId: string | undefined) => {\n    return usuarios.find((user) => user.id === userId);\n  };\n\n  const findType = (userType: number | undefined) => {\n    return typesEmployees.find((type) => type.value === userType);\n  };\n\n  const user: UserType | undefined = findUserById(id);\n  const type: OptionType | undefined = findType(user?.type.value);\n\n  return (\n    <>\n      <VFlow>\n        <Header title={!addUser ? \"Perfil\" : \"Cadastrar usuário\"}></Header>\n        <PageContainer>\n          <FormProfile\n            user={user}\n            type={type}\n            addUser={addUser}\n            editProfile={editProfile}\n            listUsers={listUsers}\n            viewProfile={viewProfile}\n          ></FormProfile>\n        </PageContainer>\n      </VFlow>\n    </>\n  );\n}\n","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/view/FinalSummary.tsx",["114"],[],"/** @jsxImportSource @emotion/react */\nimport { VFlow } from \"bold-ui\";\nimport React, { Fragment, useState } from \"react\";\nimport { AccordionFinalSummary } from \"../components/AccordionFinalSummary\";\nimport { Header } from \"../components/Header\";\nimport { PageContainer } from \"../components/PageContainer\";\nimport { mesasOcupadas } from \"../components/Helpers\";\n\nexport function FinalSummary() {\n  const renderRepeatedContent = (numberDesk: number) => (\n    <AccordionFinalSummary numDesk={numberDesk}></AccordionFinalSummary>\n  );\n\n  return (\n    <Fragment>\n      <Header title=\"Finalizar\"></Header>\n      <PageContainer>\n        <VFlow vSpacing={2}>\n          {mesasOcupadas.map((value) => renderRepeatedContent(value))}\n        </VFlow>\n      </PageContainer>\n    </Fragment>\n  );\n}\n","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/view/LoginView.tsx",[],[],"/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/view/ListUsersView.tsx",["115","116","117"],[],"/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport {\n  Button,\n  Cell,\n  DataTable,\n  Grid,\n  HFlow,\n  Icon,\n  Tooltip,\n  VFlow,\n} from \"bold-ui\";\nimport React, { useEffect, useState } from \"react\";\nimport { Header } from \"../components/Header\";\nimport { PageContainer } from \"../components/PageContainer\";\nimport { usuarios } from \"../components/Helpers\";\nimport { ModalConfirm } from \"../components/ModalConfirm\";\nimport { useNavigate } from \"react-router-dom\";\nimport { OptionType } from \"./UserView\";\nimport { Total } from \"../components/Total\";\n\ninterface ListUsersViewProps {\n  num?: number;\n  perfil?: boolean;\n}\n\nexport interface UserType {\n  id: string;\n  name: string;\n  type: OptionType;\n  user: number;\n  password?: string;\n  confirmPassword?: string;\n}\n\nexport function ListUsersView(props: ListUsersViewProps) {\n  const usersBD = usuarios;\n\n  const navigate = useNavigate();\n\n  const [isModalConfirmOpen, setIsModalConfirmOpen] = useState(false);\n  const [listUsers, setListUsers] = useState<UserType[] | undefined>(usersBD);\n  const [selectedUser, setSelectedUser] = useState<UserType | null>(null);\n\n  useEffect(() => {\n    setListUsers(usersBD);\n  }, []);\n\n  const handleRemoveClick = (users: UserType) => {\n    setSelectedUser(users);\n    setIsModalConfirmOpen(true);\n  };\n\n  const handleRemoveUser = () => {\n    const updatedUsers = listUsers?.filter(\n      (u) => u.user !== selectedUser?.user\n    );\n    setListUsers(updatedUsers ? updatedUsers : listUsers);\n    setIsModalConfirmOpen(false);\n  };\n\n  const handleEditClick = (user: UserType) => {\n    setSelectedUser(user);\n    navigate(\"/perfil\", {\n      state: { id: user.id, editProfile: true, listUsers: true },\n    });\n  };\n\n  const handleAddClick = () => {\n    navigate(\"/perfil\", {\n      state: { listUsers: true, editProfile: false, addUser: true },\n    });\n  };\n\n  const renderName = (users: UserType) => {\n    return users.name;\n  };\n\n  const renderType = (users: UserType) => {\n    return users.type.label;\n  };\n\n  const renderButton = (users: UserType) => {\n    return (\n      <div>\n        <Tooltip text=\"Editar\">\n          <Button\n            size=\"small\"\n            skin=\"ghost\"\n            onClick={() => handleEditClick(users)}\n          >\n            <Icon icon=\"penOutline\" style={penIconStyles} />\n          </Button>\n        </Tooltip>\n        <Tooltip text=\"Excluir\">\n          <Button\n            size=\"small\"\n            skin=\"ghost\"\n            onClick={() => handleRemoveClick(users)}\n          >\n            <Icon icon=\"trashOutline\" style={trachIconStyles} />\n          </Button>\n        </Tooltip>\n      </div>\n    );\n  };\n\n  const descriptionModalConfirm = (\n    <p>\n      Você confirma a exclusão do usuário{\" \"}\n      <span css={boldNameStyle}>{selectedUser?.name}</span>?\n    </p>\n  );\n\n  return (\n    <>\n      <ModalConfirm\n        open={isModalConfirmOpen}\n        onClose={() => setIsModalConfirmOpen(false)}\n        onChange={handleRemoveUser}\n        title={\"Excluir cadastro?\"}\n        description={descriptionModalConfirm}\n      ></ModalConfirm>\n      <Header title=\"Usuários\"></Header>\n      <PageContainer>\n        <VFlow>\n          <Grid>\n            <Cell xs={12} sm={12} md={4} lg={2}>\n              <Button\n                kind=\"primary\"\n                size=\"large\"\n                style={buttonCadastrarStyles}\n                onClick={handleAddClick}\n              >\n                Cadastrar novo usuário\n              </Button>\n            </Cell>\n            <Cell xs={12} sm={12} md={12} lg={12}>\n              <div css={divTableStyles}>\n                <DataTable<UserType>\n                  style={tableOrderStyles}\n                  columns={[\n                    {\n                      header: \"Nome\",\n                      name: \"name\",\n                      render: renderName,\n                    },\n                    {\n                      header: \"Tipo\",\n                      name: \"type\",\n                      render: renderType,\n                    },\n                    {\n                      name: \"buttons\",\n                      render: renderButton,\n                      style: {\n                        textAlign: \"right\",\n                        width: \"150px\",\n                      },\n                    },\n                  ]}\n                  hovered\n                  rows={listUsers}\n                />\n              </div>\n            </Cell>\n          </Grid>\n        </VFlow>\n      </PageContainer>\n    </>\n  );\n}\nconst tableOrderStyles = css`\n  font-size: 0.9rem !important;\n  border: none;\n\n  thead {\n    background-color: #0069d0;\n    color: white;\n    height: 3.25rem;\n  }\n\n  thead span {\n    cursor: auto;\n  }\n`;\n\nconst trachIconStyles = css`\n  color: rgb(208, 30, 41) !important;\n`;\n\nconst penIconStyles = css`\n  color: #232323 !important;\n`;\n\nconst divTableStyles = css`\n  overflow: auto;\n  border: 1px solid #d3d4dd;\n  border-radius: 0.375rem !important;\n  border-bottom: none;\n`;\n\nconst boldNameStyle = css`\n  font-weight: bold;\n`;\n\nconst buttonCadastrarStyles = css`\n  width: 100%;\n`;\n","/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/Helpers.ts",["118"],[],"/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/RepeatComponent.tsx",[],[],"/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/ModalOrder.tsx",[],[],"/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/Header.tsx",[],[],"/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/PageContainer.tsx",[],[],"/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/ModalConfirm.tsx",[],[],"/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/FormProfile.tsx",["119","120","121"],[],"/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/FormLogin.tsx",["122"],[],"/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/AccordionFinalSummary.tsx",[],[],"/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/ModalForgetPassword.tsx",[],[],"/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/SelectItemsOrder.tsx",[],[],"/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/TableOrders.tsx",[],[],"/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/Total.tsx",[],[],"/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/components/Menu.tsx",[],[],{"ruleId":"123","severity":1,"message":"124","line":10,"column":3,"nodeType":"125","messageId":"126","endLine":10,"endColumn":16},{"ruleId":"123","severity":1,"message":"127","line":88,"column":13,"nodeType":"125","messageId":"126","endLine":88,"endColumn":21},{"ruleId":"123","severity":1,"message":"128","line":2,"column":17,"nodeType":"125","messageId":"126","endLine":2,"endColumn":25},{"ruleId":"123","severity":1,"message":"128","line":3,"column":27,"nodeType":"125","messageId":"126","endLine":3,"endColumn":35},{"ruleId":"123","severity":1,"message":"129","line":8,"column":3,"nodeType":"125","messageId":"126","endLine":8,"endColumn":8},{"ruleId":"123","severity":1,"message":"130","line":20,"column":10,"nodeType":"125","messageId":"126","endLine":20,"endColumn":15},{"ruleId":"131","severity":1,"message":"132","line":47,"column":6,"nodeType":"133","endLine":47,"endColumn":8,"suggestions":"134"},{"ruleId":"123","severity":1,"message":"135","line":3,"column":17,"nodeType":"125","messageId":"126","endLine":3,"endColumn":27},{"ruleId":"123","severity":1,"message":"136","line":3,"column":56,"nodeType":"125","messageId":"126","endLine":3,"endColumn":61},{"ruleId":"123","severity":1,"message":"127","line":57,"column":17,"nodeType":"125","messageId":"126","endLine":57,"endColumn":25},{"ruleId":"131","severity":1,"message":"137","line":82,"column":6,"nodeType":"133","endLine":82,"endColumn":20,"suggestions":"138"},{"ruleId":"123","severity":1,"message":"127","line":18,"column":13,"nodeType":"125","messageId":"126","endLine":18,"endColumn":21},"@typescript-eslint/no-unused-vars","'mesasOcupadas' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","'useState' is defined but never used.","'HFlow' is defined but never used.","'Total' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'usersBD'. Either include it or remove the dependency array.","ArrayExpression",["139"],"'AxiosError' is defined but never used.","'VFlow' is defined but never used.","React Hook useEffect has missing dependencies: 'addUser', 'formValues', 'listUsers', and 'navigate'. Either include them or remove the dependency array.",["140"],{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [usersBD]",{"range":"145","text":"146"},"Update the dependencies array to be: [addUser, formValues, isSubmitting, listUsers, navigate]",{"range":"147","text":"148"},[1201,1203],"[usersBD]",[2440,2454],"[addUser, formValues, isSubmitting, listUsers, navigate]"]