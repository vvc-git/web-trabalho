{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMonthNames = exports.getMonthShortFormat = exports.getUserLocale = exports.DEFAULT_LOCALE = void 0;\nvar string_1 = require(\"./string\");\nexports.DEFAULT_LOCALE = 'en';\n/**\n * Return the user locale based on browser's language.\n *\n * @returns The user locale.\n */\nexports.getUserLocale = function () {\n  if (typeof navigator !== 'undefined') {\n    return (navigator.languages || []).length ? navigator.languages[0] : navigator.language;\n  }\n  return exports.DEFAULT_LOCALE;\n};\n/**\n * Returns month in short format with the first capital letter based on browser's language.\n * EN: short format: Jan\n * PT-BR: short format: Jan.\n *\n * @param date\n * @param formatter?: (date: Date, month: Intl.DateTimeFormat) => string, to change the formatting pattern\n * @return an array with month names in short and long format.\n */\nexports.getMonthShortFormat = function (date, formatter, locale) {\n  var shortFormatter = new Intl.DateTimeFormat(locale !== null && locale !== void 0 ? locale : exports.getUserLocale(), {\n    month: 'short'\n  });\n  return formatter ? string_1.capitalize(formatter(date, shortFormatter)) : string_1.capitalize(shortFormatter.format(date));\n};\n/**\n * Returns month names in short and long format with the first capital letter based on browser's language.\n * EN: short format: Jan | long format: January\n * PT-BR: short format: Jan. | long format: Janeiro\n *\n * @param locale\n * @param formatter?: (date: Date, month: Intl.DateTimeFormat) => string, to change the formatting pattern\n * @return an array with month names in short and long format.\n */\nfunction getMonthNames(locale, formatter) {\n  var year = new Date().getFullYear();\n  var longFormatter = new Intl.DateTimeFormat(locale, {\n    month: 'long'\n  });\n  var baseDates = Array.from(Array(12)).map(function (_, i) {\n    return new Date(year, i, 1, 0, 0, 0);\n  });\n  return baseDates.map(function (date) {\n    return {\n      short: exports.getMonthShortFormat(date, formatter, locale),\n      long: string_1.capitalize(longFormatter.format(date))\n    };\n  });\n}\nexports.getMonthNames = getMonthNames;","map":{"version":3,"names":["string_1","require","exports","DEFAULT_LOCALE","getUserLocale","navigator","languages","length","language","getMonthShortFormat","date","formatter","locale","shortFormatter","Intl","DateTimeFormat","month","capitalize","format","getMonthNames","year","Date","getFullYear","longFormatter","baseDates","Array","from","map","_","i","short","long"],"sources":["../../src/util/locale.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AAEaC,OAAA,CAAAC,cAAc,GAAG,IAAI;AAElC;;;;;AAKaD,OAAA,CAAAE,aAAa,GAAG;EAC3B,IAAI,OAAOC,SAAS,KAAK,WAAW,EAAE;IACpC,OAAO,CAACA,SAAS,CAACC,SAAS,IAAI,EAAE,EAAEC,MAAM,GAAGF,SAAS,CAACC,SAAS,CAAC,CAAC,CAAC,GAAGD,SAAS,CAACG,QAAQ;;EAGzF,OAAON,OAAA,CAAAC,cAAc;AACvB,CAAC;AAED;;;;;;;;;AASaD,OAAA,CAAAO,mBAAmB,GAAG,UACjCC,IAAU,EACVC,SAA8D,EAC9DC,MAAe;EAEf,IAAMC,cAAc,GAAG,IAAIC,IAAI,CAACC,cAAc,CAACH,MAAM,aAANA,MAAM,cAANA,MAAM,GAAIV,OAAA,CAAAE,aAAa,EAAE,EAAE;IAAEY,KAAK,EAAE;EAAO,CAAE,CAAC;EAC7F,OAAOL,SAAS,GAAGX,QAAA,CAAAiB,UAAU,CAACN,SAAS,CAACD,IAAI,EAAEG,cAAc,CAAC,CAAC,GAAGb,QAAA,CAAAiB,UAAU,CAACJ,cAAc,CAACK,MAAM,CAACR,IAAI,CAAC,CAAC;AAC1G,CAAC;AAED;;;;;;;;;AASA,SAAgBS,aAAaA,CAACP,MAAc,EAAED,SAA8D;EAC1G,IAAMS,IAAI,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;EAErC,IAAMC,aAAa,GAAG,IAAIT,IAAI,CAACC,cAAc,CAACH,MAAM,EAAE;IAAEI,KAAK,EAAE;EAAM,CAAE,CAAC;EAExE,IAAMQ,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACD,KAAK,CAAC,EAAE,CAAC,CAAC,CAACE,GAAG,CAAC,UAACC,CAAC,EAAEC,CAAC;IAAK,WAAIR,IAAI,CAACD,IAAI,EAAES,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAA7B,CAA6B,CAAC;EACpF,OAAOL,SAAS,CAACG,GAAG,CAAC,UAACjB,IAAI;IAAK,OAAC;MAC9BoB,KAAK,EAAE5B,OAAA,CAAAO,mBAAmB,CAACC,IAAI,EAAEC,SAAS,EAAEC,MAAM,CAAC;MACnDmB,IAAI,EAAE/B,QAAA,CAAAiB,UAAU,CAACM,aAAa,CAACL,MAAM,CAACR,IAAI,CAAC;KAC5C;EAH8B,CAG7B,CAAC;AACL;AAVAR,OAAA,CAAAiB,aAAA,GAAAA,aAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}