{"ast":null,"code":"var _jsxFileName = \"/home/daniel/\\xC1rea de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/view/ListUsersView.tsx\",\n  _s = $RefreshSig$();\n/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { Button, DataTable, Icon, Tooltip } from \"bold-ui\";\nimport React, { useState } from \"react\";\nimport { Header } from \"../components/Header\";\nimport { PageContainer } from \"../components/PageContainer\";\nimport { usuarios } from \"../components/Helpers\";\nimport { ModalConfirm } from \"../components/ModalConfirm\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nexport function ListUsersView(props) {\n  _s();\n  const {\n    num,\n    perfil\n  } = props;\n  const users = usuarios;\n  const [isModalConfirmOpen, setIsModalConfirmOpen] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const navigate = useNavigate();\n  const handleRemoveClick = users => {\n    setSelectedUser(users);\n    setIsModalConfirmOpen(true);\n  };\n  const handleEditClick = user => {\n    setSelectedUser(user);\n    navigate(\"/perfil\", {\n      state: {\n        id: userId\n      }\n    });\n  };\n  const renderName = users => {\n    return users.name;\n  };\n  const renderType = users => {\n    return users.type;\n  };\n  const renderButton = users => {\n    return _jsxDEV(\"div\", {\n      children: [_jsxDEV(Tooltip, {\n        text: \"Editar\",\n        children: _jsxDEV(Button, {\n          size: \"small\",\n          skin: \"ghost\",\n          onClick: () => handleEditClick(users),\n          children: _jsxDEV(Icon, {\n            icon: \"penOutline\",\n            style: penIconStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), _jsxDEV(Tooltip, {\n        text: \"Excluir\",\n        children: _jsxDEV(Button, {\n          size: \"small\",\n          skin: \"ghost\",\n          onClick: () => handleRemoveClick(users),\n          children: _jsxDEV(Icon, {\n            icon: \"trashOutline\",\n            style: trachIconStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(ModalConfirm, {\n      open: isModalConfirmOpen,\n      onClose: () => setIsModalConfirmOpen(false),\n      onChange: () => setIsModalConfirmOpen(false),\n      title: \"Excluir cadastro?\",\n      description: `Você confirma a exclusão do usuário ${selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.name}?`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), _jsxDEV(Header, {\n      title: \"Usu\\xE1rios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), _jsxDEV(PageContainer, {\n      children: _jsxDEV(\"div\", {\n        css: divTableStyles,\n        children: _jsxDEV(DataTable, {\n          style: tableOrderStyles,\n          columns: [{\n            header: \"Nome\",\n            name: \"name\",\n            render: renderName\n          }, {\n            header: \"Tipo\",\n            name: \"type\",\n            render: renderType\n          }, {\n            name: \"buttons\",\n            render: renderButton,\n            style: {\n              textAlign: \"right\",\n              width: \"150px\"\n            }\n          }],\n          hovered: true,\n          rows: users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ListUsersView, \"Usbn5eo2z8VWzuk54fq6x3oyiac=\", false, function () {\n  return [useNavigate];\n});\n_c = ListUsersView;\nconst tableOrderStyles = css`\n  font-size: 0.9rem !important;\n  border: none;\n\n  thead {\n    background-color: #0069d0;\n    color: white;\n    height: 3.25rem;\n  }\n\n  thead span {\n    cursor: auto;\n  }\n`;\nconst trachIconStyles = css`\n  color: rgb(208, 30, 41) !important;\n`;\nconst penIconStyles = css`\n  color: #232323 !important;\n`;\nconst divTableStyles = css`\n  overflow: auto;\n  border: 1px solid #d3d4dd;\n  border-radius: 0.375rem !important;\n  border-bottom: none;\n`;\nvar _c;\n$RefreshReg$(_c, \"ListUsersView\");","map":{"version":3,"names":["css","Button","DataTable","Icon","Tooltip","React","useState","Header","PageContainer","usuarios","ModalConfirm","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ListUsersView","props","_s","num","perfil","users","isModalConfirmOpen","setIsModalConfirmOpen","selectedUser","setSelectedUser","navigate","handleRemoveClick","handleEditClick","user","state","id","userId","renderName","name","renderType","type","renderButton","children","text","size","skin","onClick","icon","style","penIconStyles","fileName","_jsxFileName","lineNumber","columnNumber","trachIconStyles","open","onClose","onChange","title","description","divTableStyles","tableOrderStyles","columns","header","render","textAlign","width","hovered","rows","_c","$RefreshReg$"],"sources":["/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/view/ListUsersView.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { Button, DataTable, Icon, Tooltip } from \"bold-ui\";\nimport React, { useState } from \"react\";\nimport { Header } from \"../components/Header\";\nimport { PageContainer } from \"../components/PageContainer\";\nimport { usuarios } from \"../components/Helpers\";\nimport { ModalConfirm } from \"../components/ModalConfirm\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface ListUsersViewProps {\n  num?: number;\n  perfil?: boolean;\n}\n\nexport interface UserType {\n  id: string;\n  name: string;\n  type: string;\n  user: number;\n}\n\nexport function ListUsersView(props: ListUsersViewProps) {\n  const { num, perfil } = props;\n  const users = usuarios;\n\n  const [isModalConfirmOpen, setIsModalConfirmOpen] = useState(false);\n  const [selectedUser, setSelectedUser] = useState<UserType | null>(null);\n\n  const navigate = useNavigate();\n\n  const handleRemoveClick = (users: UserType) => {\n    setSelectedUser(users);\n    setIsModalConfirmOpen(true);\n  };\n\n  const handleEditClick = (user: UserType) => {\n    setSelectedUser(user);\n    navigate(\"/perfil\", { state: { id: userId } });\n  };\n\n  const renderName = (users: UserType) => {\n    return users.name;\n  };\n\n  const renderType = (users: UserType) => {\n    return users.type;\n  };\n\n  const renderButton = (users: UserType) => {\n    return (\n      <div>\n        <Tooltip text=\"Editar\">\n          <Button\n            size=\"small\"\n            skin=\"ghost\"\n            onClick={() => handleEditClick(users)}\n          >\n            <Icon icon=\"penOutline\" style={penIconStyles} />\n          </Button>\n        </Tooltip>\n        <Tooltip text=\"Excluir\">\n          <Button\n            size=\"small\"\n            skin=\"ghost\"\n            onClick={() => handleRemoveClick(users)}\n          >\n            <Icon icon=\"trashOutline\" style={trachIconStyles} />\n          </Button>\n        </Tooltip>\n      </div>\n    );\n  };\n  return (\n    <>\n      <ModalConfirm\n        open={isModalConfirmOpen}\n        onClose={() => setIsModalConfirmOpen(false)}\n        onChange={() => setIsModalConfirmOpen(false)}\n        title={\"Excluir cadastro?\"}\n        description={`Você confirma a exclusão do usuário ${selectedUser?.name}?`}\n      ></ModalConfirm>\n      <Header title=\"Usuários\"></Header>\n      <PageContainer>\n        <div css={divTableStyles}>\n          <DataTable<UserType>\n            style={tableOrderStyles}\n            columns={[\n              {\n                header: \"Nome\",\n                name: \"name\",\n                render: renderName,\n              },\n              {\n                header: \"Tipo\",\n                name: \"type\",\n                render: renderType,\n              },\n              {\n                name: \"buttons\",\n                render: renderButton,\n                style: {\n                  textAlign: \"right\",\n                  width: \"150px\",\n                },\n              },\n            ]}\n            hovered\n            rows={users}\n          />\n        </div>\n      </PageContainer>\n    </>\n  );\n}\nconst tableOrderStyles = css`\n  font-size: 0.9rem !important;\n  border: none;\n\n  thead {\n    background-color: #0069d0;\n    color: white;\n    height: 3.25rem;\n  }\n\n  thead span {\n    cursor: auto;\n  }\n`;\n\nconst trachIconStyles = css`\n  color: rgb(208, 30, 41) !important;\n`;\n\nconst penIconStyles = css`\n  color: #232323 !important;\n`;\n\nconst divTableStyles = css`\n  overflow: auto;\n  border: 1px solid #d3d4dd;\n  border-radius: 0.375rem !important;\n  border-bottom: none;\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}