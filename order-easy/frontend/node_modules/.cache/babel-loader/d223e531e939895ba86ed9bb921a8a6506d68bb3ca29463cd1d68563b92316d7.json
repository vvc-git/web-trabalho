{"ast":null,"code":"var _jsxFileName = \"/home/daniel/\\xC1rea de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/view/DeskView.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Cell, Grid } from \"bold-ui\";\nimport { Fragment, useState } from \"react\";\nimport { ModalOrder } from \"../components/ModalOrder\";\nimport React from \"react\";\nimport { RepeatComponent } from \"../components/RepeatComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const numDesks = numDesks => Array.from({\n  length: numDesks\n}, (_, index) => index + 1);\nexport function DeskView(props) {\n  _s();\n  const {\n    numDesks\n  } = props;\n  const [isModalOrderOpen, setIsModalOrderOpen] = useState(false);\n  const [tableNumer, setTableNumber] = useState(\"0\");\n  const renderRepeatedContent = index => /*#__PURE__*/_jsxDEV(Cell, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    lg: 3,\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      block: true,\n      kind: \"primary\",\n      onClick: () => handleButtonClick(value.toString()),\n      size: \"large\",\n      skin: \"default\",\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n  const handleButtonClick = numberTable => {\n    setIsModalOrderOpen(true);\n    setTableNumber(numberTable);\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalOrder, {\n      open: isModalOrderOpen,\n      onClose: () => setIsModalOrderOpen(false),\n      tableNumer: tableNumer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"center\",\n      direction: \"row\",\n      gap: 2,\n      gapVertical: 2,\n      justifyContent: \"center\",\n      wrap: true,\n      children: [/*#__PURE__*/_jsxDEV(RepeatComponent, {\n        times: numDesks,\n        children: renderRepeatedContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), numDesks(12).map(value => /*#__PURE__*/_jsxDEV(Cell, {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          block: true,\n          kind: \"primary\",\n          onClick: () => handleButtonClick(value.toString()),\n          size: \"large\",\n          skin: \"default\",\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(DeskView, \"19jcTbjNFBMuoOJ82L7Q+vinYLk=\");\n_c = DeskView;\nvar _c;\n$RefreshReg$(_c, \"DeskView\");","map":{"version":3,"names":["Button","Cell","Grid","Fragment","useState","ModalOrder","React","RepeatComponent","jsxDEV","_jsxDEV","numDesks","Array","from","length","_","index","DeskView","props","_s","isModalOrderOpen","setIsModalOrderOpen","tableNumer","setTableNumber","renderRepeatedContent","xs","sm","md","lg","children","block","kind","onClick","handleButtonClick","value","toString","size","skin","fileName","_jsxFileName","lineNumber","columnNumber","numberTable","open","onClose","alignItems","direction","gap","gapVertical","justifyContent","wrap","times","map","_c","$RefreshReg$"],"sources":["/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/view/DeskView.tsx"],"sourcesContent":["import { Button, Cell, Grid } from \"bold-ui\";\nimport { Fragment, useState } from \"react\";\nimport { ModalOrder } from \"../components/ModalOrder\";\nimport React from \"react\";\nimport { RepeatComponent } from \"../components/RepeatComponent\";\n\ninterface DeskViewProps {\n  numDesks: number;\n}\n\nexport const numDesks = (numDesks: number) =>\n  Array.from({ length: numDesks }, (_, index) => index + 1);\n\nexport function DeskView(props: DeskViewProps) {\n  const { numDesks } = props;\n  const [isModalOrderOpen, setIsModalOrderOpen] = useState(false);\n  const [tableNumer, setTableNumber] = useState(\"0\");\n\n  const renderRepeatedContent = (index: number) => (\n    <Cell xs={12} sm={6} md={4} lg={3}>\n      <Button\n        block\n        kind=\"primary\"\n        onClick={() => handleButtonClick(value.toString())}\n        size=\"large\"\n        skin=\"default\"\n      >\n        {value}\n      </Button>\n    </Cell>\n  );\n\n  const handleButtonClick = (numberTable: string) => {\n    setIsModalOrderOpen(true);\n    setTableNumber(numberTable);\n  };\n\n  return (\n    <Fragment>\n      <ModalOrder\n        open={isModalOrderOpen}\n        onClose={() => setIsModalOrderOpen(false)}\n        tableNumer={tableNumer}\n      ></ModalOrder>\n      <Grid\n        alignItems=\"center\"\n        direction=\"row\"\n        gap={2}\n        gapVertical={2}\n        justifyContent=\"center\"\n        wrap\n      >\n        <RepeatComponent times={numDesks}>\n          {renderRepeatedContent}\n        </RepeatComponent>\n        {numDesks(12).map((value) => (\n          <Cell xs={12} sm={6} md={4} lg={3}>\n            <Button\n              block\n              kind=\"primary\"\n              onClick={() => handleButtonClick(value.toString())}\n              size=\"large\"\n              skin=\"default\"\n            >\n              {value}\n            </Button>\n          </Cell>\n        ))}\n      </Grid>\n    </Fragment>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}