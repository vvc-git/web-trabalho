{"ast":null,"code":"var _jsxFileName = \"/home/daniel/\\xC1rea de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/components/FormProfile.tsx\",\n  _s = $RefreshSig$();\n/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { Select, TextField } from \"bold-ui\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport function FormProfile(props) {\n  _s();\n  const {\n    user,\n    type,\n    editProfile,\n    listUsers\n  } = props;\n  const navigate = useNavigate();\n  const [inputName, setInputName] = useState(\"\");\n  const onSubmit = values => {\n    console.log(values);\n  };\n  useEffect(() => {\n    setInputName(user === null || user === void 0 ? void 0 : user.name);\n  }, [user]);\n  const handleInputNameClear = () => {\n    setInputName(\"\");\n  };\n  const TextFieldInput = _ref => {\n    let {\n      input,\n      meta,\n      title,\n      placeholder,\n      type\n    } = _ref;\n    return _jsxDEV(TextField, {\n      name: input.name,\n      label: title,\n      placeholder: placeholder,\n      clearable: true,\n      required: true,\n      value: input.value,\n      onChange: input.onChange,\n      onBlur: input.onBlur,\n      onFocus: input.onFocus,\n      error: meta.touched && meta.error,\n      style: inputStyles,\n      type: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  };\n  const SelectInput = _ref2 => {\n    let {\n      input,\n      meta,\n      title,\n      placeholder\n    } = _ref2;\n    return _jsxDEV(Select, {\n      name: input.name,\n      required: true,\n      clearable: true,\n      style: selectStyles,\n      error: meta.touched && meta.error,\n      itemIsEqual: (a, b) => a.value === b.value,\n      itemToString: item => item ? item.label : \"\",\n      items: [{\n        value: 1,\n        label: \"Atendimento\"\n      }, {\n        value: 2,\n        label: \"Caixa\"\n      }, {\n        value: 3,\n        label: \"Supervisor\"\n      }],\n      label: title,\n      value: input.value,\n      openOnFocus: true,\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  };\n}\n_s(FormProfile, \"iyemJJvEJsvZX0RiGETzr1/NZMk=\", false, function () {\n  return [useNavigate];\n});\n_c = FormProfile;\nconst buttonStyles = css`\n  width: 100%;\n`;\nconst cellButtonsStyles = css`\n  display: inline-flex;\n  justify-content: end;\n  padding-right: 0 !important;\n  padding-left: 0 !important;\n`;\nconst inputStyles = css`\n  width: 100% !important;\n  min-height: 38px !important;\n  border-color: hsl(0, 0%, 80%) !important;\n  border-radius: 4px !important;\n  font-size: 1rem;\n\n  input {\n    width: 100% !important;\n    min-height: 38px !important;\n    border-color: hsl(0, 0%, 80%) !important;\n    border-radius: 4px !important;\n    font-size: 1rem;\n  }\n`;\nconst selectStyles = css`\n  input {\n    min-height: 38px !important;\n    border-color: hsl(0, 0%, 80%) !important;\n    border-radius: 4px !important;\n    font-size: 1rem;\n  }\n\n  ul li {\n    font-size: 1rem;\n  }\n`;\nvar _c;\n$RefreshReg$(_c, \"FormProfile\");","map":{"version":3,"names":["css","Select","TextField","React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","FormProfile","props","_s","user","type","editProfile","listUsers","navigate","inputName","setInputName","onSubmit","values","console","log","name","handleInputNameClear","TextFieldInput","_ref","input","meta","title","placeholder","label","clearable","required","value","onChange","onBlur","onFocus","error","touched","style","inputStyles","fileName","_jsxFileName","lineNumber","columnNumber","SelectInput","_ref2","selectStyles","itemIsEqual","a","b","itemToString","item","items","openOnFocus","_c","buttonStyles","cellButtonsStyles","$RefreshReg$"],"sources":["/home/daniel/√Årea de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/components/FormProfile.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { Button, Cell, Grid, Select, TextField, VFlow } from \"bold-ui\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { OptionType } from \"../view/UserView\";\nimport { UserType } from \"../view/ListUsersView\";\nimport { Field, FieldRenderProps, Form } from \"react-final-form\";\n\ninterface FormProfileProps {\n  user: UserType | undefined;\n  type: OptionType | undefined;\n  editProfile?: boolean;\n  listUsers?: boolean;\n}\n\ninterface FormValues {\n  name: string;\n  email: string;\n  age: number;\n}\n\nexport function FormProfile(props: FormProfileProps) {\n  const { user, type, editProfile, listUsers } = props;\n  const navigate = useNavigate();\n\n  const [inputName, setInputName] = useState<string | undefined>(\"\");\n\n  const onSubmit = (values: FormValues) => {\n    console.log(values);\n  };\n\n  useEffect(() => {\n    setInputName(user?.name);\n  }, [user]);\n\n  const handleInputNameClear = () => {\n    setInputName(\"\");\n  };\n\n  const TextFieldInput = ({\n    input,\n    meta,\n    title,\n    placeholder,\n    type,\n  }: FieldRenderProps<any, HTMLElement> & {\n    title: string;\n    placeholder: string;\n    type: string;\n  }) => {\n    return (\n      <TextField\n        name={input.name}\n        label={title}\n        placeholder={placeholder}\n        clearable\n        required\n        value={input.value}\n        onChange={input.onChange}\n        onBlur={input.onBlur}\n        onFocus={input.onFocus}\n        error={meta.touched && meta.error}\n        style={inputStyles}\n        type={type}\n      />\n    );\n  };\n  interface SelectInputProps extends FieldRenderProps<string, HTMLElement> {\n    title: string;\n    placeholder: string;\n  }\n  const SelectInput = ({\n    input,\n    meta,\n    title,\n    placeholder,\n  }: SelectInputProps) => {\n    return (\n      <Select\n        name={input.name}\n        required\n        clearable\n        style={selectStyles}\n        error={meta.touched && meta.error}\n        itemIsEqual={(a, b) => a.value === b.value}\n        itemToString={(item) => (item ? item.label : \"\")}\n        items={[\n          {\n            value: 1,\n            label: \"Atendimento\",\n          },\n          {\n            value: 2,\n            label: \"Caixa\",\n          },\n          {\n            value: 3,\n            label: \"Supervisor\",\n          },\n        ]}\n        label={title}\n        value={input.value}\n        openOnFocus\n        placeholder={placeholder}\n      />\n    );\n  };\n}\nconst buttonStyles = css`\n  width: 100%;\n`;\n\nconst cellButtonsStyles = css`\n  display: inline-flex;\n  justify-content: end;\n  padding-right: 0 !important;\n  padding-left: 0 !important;\n`;\n\nconst inputStyles = css`\n  width: 100% !important;\n  min-height: 38px !important;\n  border-color: hsl(0, 0%, 80%) !important;\n  border-radius: 4px !important;\n  font-size: 1rem;\n\n  input {\n    width: 100% !important;\n    min-height: 38px !important;\n    border-color: hsl(0, 0%, 80%) !important;\n    border-radius: 4px !important;\n    font-size: 1rem;\n  }\n`;\n\nconst selectStyles = css`\n  input {\n    min-height: 38px !important;\n    border-color: hsl(0, 0%, 80%) !important;\n    border-radius: 4px !important;\n    font-size: 1rem;\n  }\n\n  ul li {\n    font-size: 1rem;\n  }\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}