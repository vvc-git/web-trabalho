{"ast":null,"code":"var _jsxFileName = \"/home/daniel/\\xC1rea de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/view/DeskView.tsx\",\n  _s = $RefreshSig$();\n/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { Button, Cell, Grid, Tooltip } from \"bold-ui\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { ModalOrder } from \"../components/ModalOrder\";\nimport React from \"react\";\nimport { RepeatComponent } from \"../components/RepeatComponent\";\nimport { formatNumberWithTwoDigits } from \"../components/Helpers\";\nimport { Header } from \"../components/Header\";\nimport { PageContainer } from \"../components/PageContainer\";\nimport { ModalConfirm } from \"../components/ModalConfirm\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport function DeskView(props) {\n  _s();\n  const {\n    numDesks\n  } = props;\n  const [isModalOrderOpen, setIsModalOrderOpen] = useState(false);\n  const [isModalConfirmReservation, setIsModalConfirmReservation] = useState(false);\n  const [tableNumer, setTableNumber] = useState(0);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:4000/queryMesasOcupadas\", numDesks);\n        setData(response.data);\n      } catch (error) {\n        console.log(\"Oi\");\n        console.log(\"Ocorreu um erro na requisição\");\n      }\n    };\n    fetchData(); // Chama a função fetchData ao montar o componente\n  }, [isModalConfirmReservation]);\n  const renderRepeatedContent = index => {\n    const mesaOcupada = data.find(item => item === index);\n    const typeButton = mesaOcupada ? \"danger\" : \"primary\";\n    const textTooltip = mesaOcupada ? \"Ocupado\" : \"Clique para reservar\";\n    return _jsxDEV(Cell, {\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      children: _jsxDEV(Tooltip, {\n        text: textTooltip,\n        children: _jsxDEV(Button, {\n          block: true,\n          kind: typeButton,\n          onClick: () => handleButtonClick(index, mesaOcupada),\n          size: \"large\",\n          skin: \"default\",\n          children: [\"MESA \", formatNumberWithTwoDigits(index)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  };\n  const handleButtonClick = (numberTable, mesaOcupada) => {\n    mesaOcupada ? setIsModalOrderOpen(true) : setIsModalConfirmReservation(true);\n    setTableNumber(numberTable);\n  };\n  const reservarMesa = async () => {\n    try {\n      await axios.post(\"http://localhost:4000/cadastroMesa\", {\n        numero: tableNumer\n      });\n      setIsModalConfirmReservation(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const descriptionModalConfirm = _jsxDEV(\"p\", {\n    children: [\"Voc\\xEA deseja reservar a\", \" \", _jsxDEV(\"span\", {\n      css: boldTableNumberStyle,\n      children: [\"MESA \", formatNumberWithTwoDigits(tableNumer)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), \"?\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n  return _jsxDEV(Fragment, {\n    children: [_jsxDEV(Header, {\n      title: \"In\\xEDcio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), _jsxDEV(ModalOrder, {\n      open: isModalOrderOpen,\n      onClose: () => setIsModalOrderOpen(false),\n      tableNumer: tableNumer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), _jsxDEV(ModalConfirm, {\n      open: isModalConfirmReservation,\n      onClose: () => setIsModalConfirmReservation(false),\n      onChange: reservarMesa,\n      title: \"Confirmar reserva?\",\n      description: descriptionModalConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), _jsxDEV(PageContainer, {\n      children: _jsxDEV(Grid, {\n        alignItems: \"center\",\n        direction: \"row\",\n        gap: 2,\n        gapVertical: 2,\n        justifyContent: \"center\",\n        wrap: true,\n        children: _jsxDEV(RepeatComponent, {\n          times: numDesks,\n          children: renderRepeatedContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(DeskView, \"O5rDR+LnW5oHkI+Y5ei/oR1EEgk=\");\n_c = DeskView;\nconst boldTableNumberStyle = css`\n  font-weight: bold;\n`;\nvar _c;\n$RefreshReg$(_c, \"DeskView\");","map":{"version":3,"names":["css","Button","Cell","Grid","Tooltip","Fragment","useEffect","useState","ModalOrder","React","RepeatComponent","formatNumberWithTwoDigits","Header","PageContainer","ModalConfirm","axios","jsxDEV","_jsxDEV","DeskView","props","_s","numDesks","isModalOrderOpen","setIsModalOrderOpen","isModalConfirmReservation","setIsModalConfirmReservation","tableNumer","setTableNumber","data","setData","fetchData","response","post","error","console","log","renderRepeatedContent","index","mesaOcupada","find","item","typeButton","textTooltip","xs","sm","md","lg","children","text","block","kind","onClick","handleButtonClick","size","skin","fileName","_jsxFileName","lineNumber","columnNumber","numberTable","reservarMesa","numero","descriptionModalConfirm","boldTableNumberStyle","title","open","onClose","onChange","description","alignItems","direction","gap","gapVertical","justifyContent","wrap","times","_c","$RefreshReg$"],"sources":["/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/view/DeskView.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { Button, Cell, Grid, Tooltip } from \"bold-ui\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { ModalOrder } from \"../components/ModalOrder\";\nimport React from \"react\";\nimport { RepeatComponent } from \"../components/RepeatComponent\";\nimport {\n  formatNumberWithTwoDigits,\n  mesasOcupadas,\n} from \"../components/Helpers\";\nimport { Header } from \"../components/Header\";\nimport { PageContainer } from \"../components/PageContainer\";\nimport { ModalConfirm } from \"../components/ModalConfirm\";\nimport axios from \"axios\";\n\ninterface DeskViewProps {\n  numDesks: number;\n}\n\nexport function DeskView(props: DeskViewProps) {\n  const { numDesks } = props;\n  const [isModalOrderOpen, setIsModalOrderOpen] = useState(false);\n  const [isModalConfirmReservation, setIsModalConfirmReservation] =\n    useState(false);\n  const [tableNumer, setTableNumber] = useState(0);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.post(\n          \"http://localhost:4000/queryMesasOcupadas\",\n          numDesks\n        );\n        setData(response.data);\n      } catch (error) {\n        console.log(\"Oi\");\n        console.log(\"Ocorreu um erro na requisição\");\n      }\n    };\n\n    fetchData(); // Chama a função fetchData ao montar o componente\n  }, [isModalConfirmReservation]);\n\n  const renderRepeatedContent = (index: number) => {\n    const mesaOcupada = data.find((item) => item === index);\n    const typeButton = mesaOcupada ? \"danger\" : \"primary\";\n    const textTooltip = mesaOcupada ? \"Ocupado\" : \"Clique para reservar\";\n\n    return (\n      <Cell xs={12} sm={6} md={4} lg={3}>\n        <Tooltip text={textTooltip}>\n          <Button\n            block\n            kind={typeButton}\n            onClick={() => handleButtonClick(index, mesaOcupada)}\n            size=\"large\"\n            skin=\"default\"\n          >\n            MESA {formatNumberWithTwoDigits(index)}\n          </Button>\n        </Tooltip>\n      </Cell>\n    );\n  };\n\n  const handleButtonClick = (\n    numberTable: number,\n    mesaOcupada: number | undefined\n  ) => {\n    mesaOcupada\n      ? setIsModalOrderOpen(true)\n      : setIsModalConfirmReservation(true);\n    setTableNumber(numberTable);\n  };\n\n  const reservarMesa = async () => {\n    try {\n      await axios.post(\"http://localhost:4000/cadastroMesa\", {\n        numero: tableNumer,\n      });\n      setIsModalConfirmReservation(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const descriptionModalConfirm = (\n    <p>\n      Você deseja reservar a{\" \"}\n      <span css={boldTableNumberStyle}>\n        MESA {formatNumberWithTwoDigits(tableNumer)}\n      </span>\n      ?\n    </p>\n  );\n\n  return (\n    <Fragment>\n      <Header title=\"Início\"></Header>\n      <ModalOrder\n        open={isModalOrderOpen}\n        onClose={() => setIsModalOrderOpen(false)}\n        tableNumer={tableNumer}\n      ></ModalOrder>\n      <ModalConfirm\n        open={isModalConfirmReservation}\n        onClose={() => setIsModalConfirmReservation(false)}\n        onChange={reservarMesa}\n        title={\"Confirmar reserva?\"}\n        description={descriptionModalConfirm}\n      ></ModalConfirm>\n      <PageContainer>\n        <Grid\n          alignItems=\"center\"\n          direction=\"row\"\n          gap={2}\n          gapVertical={2}\n          justifyContent=\"center\"\n          wrap\n        >\n          <RepeatComponent times={numDesks}>\n            {renderRepeatedContent}\n          </RepeatComponent>\n        </Grid>\n      </PageContainer>\n    </Fragment>\n  );\n}\n\nconst boldTableNumberStyle = css`\n  font-weight: bold;\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}