{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStepProps = exports.useStepperState = void 0;\nvar react_1 = require(\"react\");\nfunction useStepperState(initialCurrStep) {\n  if (initialCurrStep === void 0) {\n    initialCurrStep = 0;\n  }\n  var _a = react_1.useState(initialCurrStep),\n    currentStep = _a[0],\n    setCurrentStep = _a[1];\n  var nextStep = function () {\n    return setCurrentStep(function (step) {\n      return step + 1;\n    });\n  };\n  var previousStep = function () {\n    return setCurrentStep(function (step) {\n      return step - 1;\n    });\n  };\n  return {\n    getStepProps: function (step) {\n      return getStepProps(step, currentStep);\n    },\n    currentStep: currentStep,\n    setCurrentStep: setCurrentStep,\n    nextStep: nextStep,\n    previousStep: previousStep\n  };\n}\nexports.useStepperState = useStepperState;\n/**\n * Create a StepProps properties object to pass to a Step component, based on its index and current Stepper state.\n *\n * @param step The step index that will receive the props.\n * @param currentActiveStep The current active stepper step.\n */\nfunction getStepProps(step, currentActiveStep) {\n  return {\n    status: step < currentActiveStep && 'completed' || step > currentActiveStep && 'incompleted' || 'active',\n    hasConnector: step > 0\n  };\n}\nexports.getStepProps = getStepProps;\n//# sourceMappingURL=useStepperState.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}