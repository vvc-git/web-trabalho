{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextArea = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar useFormControl_1 = require(\"../../hooks/useFormControl\");\nvar styles_1 = require(\"../../styles\");\nvar FormControl_1 = require(\"../FormControl\");\nvar TextInputBase_1 = require(\"../TextField/TextInputBase\");\nfunction TextArea(props) {\n  var style = props.style,\n    label = props.label,\n    resize = props.resize,\n    rest = __rest(props, [\"style\", \"label\", \"resize\"]);\n  var error = props.error,\n    restFormControlProps = __rest(props, [\"error\"]);\n  var valueLength = props.value && typeof props.value === 'string' && props.value.length;\n  var defaultValueLength = props.defaultValue && typeof props.defaultValue === 'string' && props.defaultValue.length;\n  var currentLength = valueLength || defaultValueLength || 0;\n  var getFormControlProps = useFormControl_1.useFormControl(restFormControlProps).getFormControlProps;\n  var getInputProps = useFormControl_1.useFormControl(props).getInputProps;\n  var inputProps = getInputProps();\n  var invalid = inputProps['aria-invalid'];\n  var errorId = inputProps['aria-errormessage'];\n  var _a = styles_1.useStyles(createStyles, {\n      invalid: invalid\n    }),\n    classes = _a.classes,\n    css = _a.css;\n  var className = css(classes.input, invalid && classes.invalid, style, {\n    resize: resize\n  });\n  return react_1.default.createElement(FormControl_1.FormControl, __assign({}, getFormControlProps()), react_1.default.createElement(\"textarea\", __assign({\n    className: className\n  }, inputProps, rest)), react_1.default.createElement(\"div\", {\n    className: classes.footer\n  }, error && react_1.default.createElement(FormControl_1.FormError, {\n    id: errorId,\n    role: 'alert'\n  }, error), props.maxLength && react_1.default.createElement(\"div\", {\n    className: classes.counter\n  }, currentLength, \"/\", props.maxLength, \" caracteres\")));\n}\nexports.TextArea = TextArea;\nvar createStyles = function (theme, _a) {\n  var invalid = _a.invalid;\n  return __assign(__assign({}, TextInputBase_1.createStyles(theme)), {\n    footer: {\n      display: 'flex'\n    },\n    counter: {\n      marginLeft: 'auto',\n      color: invalid && theme.pallete.status.danger.main\n    }\n  });\n};\n//# sourceMappingURL=TextArea.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}