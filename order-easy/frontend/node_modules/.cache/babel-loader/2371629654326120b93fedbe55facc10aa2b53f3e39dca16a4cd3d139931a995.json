{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStyles = exports.Paginator = void 0;\nvar react_1 = __importStar(require(\"react\"));\nvar i18n_1 = require(\"../../i18n\");\nvar styles_1 = require(\"../../styles\");\nvar Button_1 = require(\"../Button\");\nvar Icon_1 = require(\"../Icon\");\nvar Text_1 = require(\"../Text\");\nvar TextField_1 = require(\"../TextField\");\nfunction Paginator(props) {\n  var page = props.page,\n    total = props.total,\n    onChange = props.onChange;\n  var locale = i18n_1.useLocale();\n  var _a = react_1.useState(\"\" + (page + 1)),\n    inputValue = _a[0],\n    setInputValue = _a[1];\n  react_1.useEffect(function () {\n    setInputValue(\"\" + (page + 1));\n  }, [page]);\n  var classes = styles_1.useStyles(exports.createStyles).classes;\n  var handleInputChange = function (e) {\n    setInputValue(e.target.value.replace(/[^\\d]/g, ''));\n  };\n  var handleInputKeyPress = function (e) {\n    if (e.key === 'Enter') {\n      applyInputValue();\n    }\n  };\n  var handleInputBlur = function (e) {\n    applyInputValue();\n  };\n  var applyInputValue = function () {\n    var inputNumber = parseInt(inputValue, 10);\n    if (!isNaN(inputNumber) && inputNumber !== currentPage() && inputNumber >= 1 && inputNumber <= total) {\n      onChange && onChange(inputNumber - 1);\n    } else {\n      setInputValue(\"\" + (page + 1));\n    }\n  };\n  var currentPage = function () {\n    return page + 1;\n  };\n  var isLastPage = function () {\n    return currentPage() >= total;\n  };\n  var isFirstPage = function () {\n    return currentPage() <= 1;\n  };\n  var go = function (newPage) {\n    return onChange && onChange(newPage - 1);\n  };\n  var previous = function () {\n    return go(currentPage() - 1);\n  };\n  var next = function () {\n    return go(currentPage() + 1);\n  };\n  return react_1.default.createElement(\"div\", {\n    className: classes.paginator\n  }, react_1.default.createElement(Button_1.Button, {\n    style: classes.leftButton,\n    size: 'small',\n    skin: 'ghost',\n    disabled: isFirstPage(),\n    title: locale.paginator.previousPage,\n    onClick: !isFirstPage() ? previous : undefined\n  }, react_1.default.createElement(Icon_1.Icon, {\n    icon: 'angleLeft'\n  })), react_1.default.createElement(TextField_1.TextInput, {\n    style: classes.input,\n    value: inputValue,\n    onChange: handleInputChange,\n    onBlur: handleInputBlur,\n    onKeyDown: handleInputKeyPress,\n    clearable: false,\n    maxLength: 4,\n    title: locale.paginator.currentPage\n  }), react_1.default.createElement(Text_1.Text, null, locale.paginator.of, \" \", total), react_1.default.createElement(Button_1.Button, {\n    style: classes.rightButton,\n    size: 'small',\n    skin: 'ghost',\n    disabled: isLastPage(),\n    title: locale.paginator.nextPage,\n    onClick: !isLastPage() ? next : undefined\n  }, react_1.default.createElement(Icon_1.Icon, {\n    icon: 'angleRight'\n  })));\n}\nexports.Paginator = Paginator;\nPaginator.defaultProps = {\n  onChange: function (page) {\n    return null;\n  }\n};\nexports.createStyles = function (theme) {\n  return {\n    paginator: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      margin: 0\n    },\n    disabled: {\n      color: theme.pallete.text.disabled,\n      cursor: 'not-allowed',\n      '&:hover': {\n        background: 'transparent'\n      }\n    },\n    input: {\n      width: Number(40 + 4 * 7),\n      textAlign: 'center',\n      margin: '0 0.5rem 0 0.25rem'\n    },\n    leftButton: {},\n    rightButton: {\n      marginLeft: '0.25rem'\n    }\n  };\n};\n//# sourceMappingURL=Paginator.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}