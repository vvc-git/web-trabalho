{"ast":null,"code":"var _jsxFileName = \"/home/daniel/\\xC1rea de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/components/FormProfile.tsx\",\n  _s = $RefreshSig$();\n/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { TextField } from \"bold-ui\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Field, Form } from \"react-final-form\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport function FormProfile(props) {\n  _s();\n  const {\n    user,\n    type,\n    editProfile,\n    listUsers\n  } = props;\n  const navigate = useNavigate();\n  const [inputName, setInputName] = useState(\"\");\n  const onSubmit = values => {\n    console.log(values);\n  };\n  useEffect(() => {\n    setInputName(user === null || user === void 0 ? void 0 : user.name);\n  }, [user]);\n  const handleInputNameClear = () => {\n    setInputName(\"\");\n  };\n  const TextFieldInput = _ref => {\n    let {\n      input,\n      meta\n    } = _ref;\n    return _jsxDEV(TextField, {\n      name: input.name,\n      label: \"Nome completo\",\n      placeholder: \"Ex.: Jo\\xE3o da Silva Pereira\",\n      clearable: true,\n      required: true,\n      value: input.value,\n      onChange: input.onChange,\n      onBlur: input.onBlur,\n      onFocus: input.onFocus,\n      error: meta.touched && meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(Form, {\n    onSubmit: onSubmit\n    //validate={validate}\n    ,\n    render: _ref2 => {\n      let {\n        handleSubmit\n      } = _ref2;\n      return _jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: _jsxDEV(Field, {\n          name: \"interests\",\n          TextFieldInput: TextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this)\n  // <Grid gap={2} gapVertical={1} justifyContent=\"flex-start\">\n  //   <Cell lg={6} md={6} sm={12} xs={12}>\n  //     <TextField\n  //       name=\"name\"\n  //       label=\"Nome completo\"\n  //       placeholder=\"Ex.: João da Silva Pereira\"\n  //       style={inputStyles}\n  //       value={inputName}\n  //       onClear={handleInputNameClear}\n  //       clearable\n  //       required\n  //     />\n  //   </Cell>\n  //   <Cell lg={4} md={4} sm={12} xs={12}>\n  //     <TextField\n  //       name=\"user\"\n  //       label=\"Usuário\"\n  //       placeholder=\"Digite o CPF do funcionário\"\n  //       style={inputStyles}\n  //       value={user?.user}\n  //       disabled={editProfile}\n  //       clearable\n  //       required\n  //     />\n  //   </Cell>\n  //   <Cell lg={2} md={2} sm={12} xs={12}>\n  //     <Select\n  //       name=\"type\"\n  //       required\n  //       clearable\n  //       style={selectStyles}\n  //       error=\"\"\n  //       itemIsEqual={(a, b) => a.value === b.value}\n  //       itemToString={(item) => (item ? item.label : \"\")}\n  //       items={[\n  //         {\n  //           value: 1,\n  //           label: \"Atendimento\",\n  //         },\n  //         {\n  //           value: 2,\n  //           label: \"Caixa\",\n  //         },\n  //         {\n  //           value: 3,\n  //           label: \"Supervisor\",\n  //         },\n  //       ]}\n  //       label=\"Tipo\"\n  //       menuMinWidth={undefined}\n  //       value={type}\n  //       openOnFocus\n  //       placeholder=\"Escolha o tipo\"\n  //     />\n  //   </Cell>\n  //   <Cell lg={6} md={6} sm={12} xs={12}>\n  //     <TextField\n  //       name=\"password\"\n  //       label=\"Senha\"\n  //       placeholder=\"Escolha uma senha forte\"\n  //       type=\"password\"\n  //       style={inputStyles}\n  //       required\n  //     />\n  //   </Cell>\n  //   <Cell lg={6} md={6} sm={12} xs={12}>\n  //     <TextField\n  //       name=\"passwordConfirm\"\n  //       label=\"Confirme sua senha\"\n  //       placeholder=\"Digite novamente a senha\"\n  //       type=\"password\"\n  //       style={inputStyles}\n  //       required\n  //     />\n  //   </Cell>\n  //   <Cell lg={12} md={12} sm={12} xs={12} style={cellButtonsStyles}>\n  //     {listUsers && (\n  //       <Cell lg={1} md={4} sm={6} xs={12}>\n  //         <Button\n  //           kind=\"danger\"\n  //           size=\"medium\"\n  //           style={buttonStyles}\n  //           onClick={() => navigate(`/usuarios`)}\n  //         >\n  //           Cancelar\n  //         </Button>\n  //       </Cell>\n  //     )}\n\n  //     <Cell lg={1} md={4} sm={6} xs={12}>\n  //       <Button\n  //         kind=\"primary\"\n  //         size=\"medium\"\n  //         type=\"submit\"\n  //         style={buttonStyles}\n  //       >\n  //         Salvar\n  //       </Button>\n  //     </Cell>\n  //   </Cell>\n  // </Grid>\n  ;\n}\n_s(FormProfile, \"iyemJJvEJsvZX0RiGETzr1/NZMk=\", false, function () {\n  return [useNavigate];\n});\n_c = FormProfile;\nconst buttonStyles = css`\n  width: 100%;\n`;\nconst cellButtonsStyles = css`\n  display: inline-flex;\n  justify-content: end;\n  padding-right: 0 !important;\n  padding-left: 0 !important;\n`;\nconst inputStyles = css`\n  width: 100% !important;\n  min-height: 38px !important;\n  border-color: hsl(0, 0%, 80%) !important;\n  border-radius: 4px !important;\n  font-size: 1rem;\n\n  input {\n    width: 100% !important;\n    min-height: 38px !important;\n    border-color: hsl(0, 0%, 80%) !important;\n    border-radius: 4px !important;\n    font-size: 1rem;\n  }\n`;\nconst selectStyles = css`\n  input {\n    min-height: 38px !important;\n    border-color: hsl(0, 0%, 80%) !important;\n    border-radius: 4px !important;\n    font-size: 1rem;\n  }\n\n  ul li {\n    font-size: 1rem;\n  }\n`;\nvar _c;\n$RefreshReg$(_c, \"FormProfile\");","map":{"version":3,"names":["css","TextField","React","useEffect","useState","useNavigate","Field","Form","jsxDEV","_jsxDEV","FormProfile","props","_s","user","type","editProfile","listUsers","navigate","inputName","setInputName","onSubmit","values","console","log","name","handleInputNameClear","TextFieldInput","_ref","input","meta","label","placeholder","clearable","required","value","onChange","onBlur","onFocus","error","touched","fileName","_jsxFileName","lineNumber","columnNumber","render","_ref2","handleSubmit","children","_c","buttonStyles","cellButtonsStyles","inputStyles","selectStyles","$RefreshReg$"],"sources":["/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/components/FormProfile.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { Button, Cell, Grid, Select, TextField, VFlow } from \"bold-ui\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { OptionType } from \"../view/UserView\";\nimport { UserType } from \"../view/ListUsersView\";\nimport { Field, FieldRenderProps, Form } from \"react-final-form\";\n\ninterface FormProfileProps {\n  user: UserType | undefined;\n  type: OptionType | undefined;\n  editProfile?: boolean;\n  listUsers?: boolean;\n}\n\ninterface FormValues {\n  name: string;\n  email: string;\n  age: number;\n}\n\nexport function FormProfile(props: FormProfileProps) {\n  const { user, type, editProfile, listUsers } = props;\n  const navigate = useNavigate();\n\n  const [inputName, setInputName] = useState<string | undefined>(\"\");\n\n  const onSubmit = (values: FormValues) => {\n    console.log(values);\n  };\n\n  useEffect(() => {\n    setInputName(user?.name);\n  }, [user]);\n\n  const handleInputNameClear = () => {\n    setInputName(\"\");\n  };\n\n  const TextFieldInput = ({\n    input,\n    meta,\n  }: FieldRenderProps<any, HTMLElement>) => {\n    return (\n      <TextField\n        name={input.name}\n        label=\"Nome completo\"\n        placeholder=\"Ex.: João da Silva Pereira\"\n        clearable\n        required\n        value={input.value}\n        onChange={input.onChange}\n        onBlur={input.onBlur}\n        onFocus={input.onFocus}\n        error={meta.touched && meta.error}\n      />\n    );\n  };\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      //validate={validate}\n      render={({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <Field name=\"interests\" TextFieldInput={TextField} />\n        </form>\n      )}\n    />\n    // <Grid gap={2} gapVertical={1} justifyContent=\"flex-start\">\n    //   <Cell lg={6} md={6} sm={12} xs={12}>\n    //     <TextField\n    //       name=\"name\"\n    //       label=\"Nome completo\"\n    //       placeholder=\"Ex.: João da Silva Pereira\"\n    //       style={inputStyles}\n    //       value={inputName}\n    //       onClear={handleInputNameClear}\n    //       clearable\n    //       required\n    //     />\n    //   </Cell>\n    //   <Cell lg={4} md={4} sm={12} xs={12}>\n    //     <TextField\n    //       name=\"user\"\n    //       label=\"Usuário\"\n    //       placeholder=\"Digite o CPF do funcionário\"\n    //       style={inputStyles}\n    //       value={user?.user}\n    //       disabled={editProfile}\n    //       clearable\n    //       required\n    //     />\n    //   </Cell>\n    //   <Cell lg={2} md={2} sm={12} xs={12}>\n    //     <Select\n    //       name=\"type\"\n    //       required\n    //       clearable\n    //       style={selectStyles}\n    //       error=\"\"\n    //       itemIsEqual={(a, b) => a.value === b.value}\n    //       itemToString={(item) => (item ? item.label : \"\")}\n    //       items={[\n    //         {\n    //           value: 1,\n    //           label: \"Atendimento\",\n    //         },\n    //         {\n    //           value: 2,\n    //           label: \"Caixa\",\n    //         },\n    //         {\n    //           value: 3,\n    //           label: \"Supervisor\",\n    //         },\n    //       ]}\n    //       label=\"Tipo\"\n    //       menuMinWidth={undefined}\n    //       value={type}\n    //       openOnFocus\n    //       placeholder=\"Escolha o tipo\"\n    //     />\n    //   </Cell>\n    //   <Cell lg={6} md={6} sm={12} xs={12}>\n    //     <TextField\n    //       name=\"password\"\n    //       label=\"Senha\"\n    //       placeholder=\"Escolha uma senha forte\"\n    //       type=\"password\"\n    //       style={inputStyles}\n    //       required\n    //     />\n    //   </Cell>\n    //   <Cell lg={6} md={6} sm={12} xs={12}>\n    //     <TextField\n    //       name=\"passwordConfirm\"\n    //       label=\"Confirme sua senha\"\n    //       placeholder=\"Digite novamente a senha\"\n    //       type=\"password\"\n    //       style={inputStyles}\n    //       required\n    //     />\n    //   </Cell>\n    //   <Cell lg={12} md={12} sm={12} xs={12} style={cellButtonsStyles}>\n    //     {listUsers && (\n    //       <Cell lg={1} md={4} sm={6} xs={12}>\n    //         <Button\n    //           kind=\"danger\"\n    //           size=\"medium\"\n    //           style={buttonStyles}\n    //           onClick={() => navigate(`/usuarios`)}\n    //         >\n    //           Cancelar\n    //         </Button>\n    //       </Cell>\n    //     )}\n\n    //     <Cell lg={1} md={4} sm={6} xs={12}>\n    //       <Button\n    //         kind=\"primary\"\n    //         size=\"medium\"\n    //         type=\"submit\"\n    //         style={buttonStyles}\n    //       >\n    //         Salvar\n    //       </Button>\n    //     </Cell>\n    //   </Cell>\n    // </Grid>\n  );\n}\nconst buttonStyles = css`\n  width: 100%;\n`;\n\nconst cellButtonsStyles = css`\n  display: inline-flex;\n  justify-content: end;\n  padding-right: 0 !important;\n  padding-left: 0 !important;\n`;\n\nconst inputStyles = css`\n  width: 100% !important;\n  min-height: 38px !important;\n  border-color: hsl(0, 0%, 80%) !important;\n  border-radius: 4px !important;\n  font-size: 1rem;\n\n  input {\n    width: 100% !important;\n    min-height: 38px !important;\n    border-color: hsl(0, 0%, 80%) !important;\n    border-radius: 4px !important;\n    font-size: 1rem;\n  }\n`;\n\nconst selectStyles = css`\n  input {\n    min-height: 38px !important;\n    border-color: hsl(0, 0%, 80%) !important;\n    border-radius: 4px !important;\n    font-size: 1rem;\n  }\n\n  ul li {\n    font-size: 1rem;\n  }\n`;\n"],"mappings":";;AAAA;AACA,SAASA,GAAG,QAAQ,gBAAgB;AACpC,SAAqCC,SAAS,QAAe,SAAS;AACtE,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAI9C,SAASC,KAAK,EAAoBC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAejE,OAAO,SAASC,WAAWA,CAACC,KAAuB,EAAE;EAAAC,EAAA;EACnD,MAAM;IAAEC,IAAI;IAAEC,IAAI;IAAEC,WAAW;IAAEC;EAAU,CAAC,GAAGL,KAAK;EACpD,MAAMM,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAqB,EAAE,CAAC;EAElE,MAAMgB,QAAQ,GAAIC,MAAkB,IAAK;IACvCC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACrB,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACdgB,YAAY,CAACN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEW,IAAI,CAAC;EAC1B,CAAC,EAAE,CAACX,IAAI,CAAC,CAAC;EAEV,MAAMY,oBAAoB,GAAGA,CAAA,KAAM;IACjCN,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,MAAMO,cAAc,GAAGC,IAAA,IAGmB;IAAA,IAHlB;MACtBC,KAAK;MACLC;IACkC,CAAC,GAAAF,IAAA;IACnC,OACElB,OAAA,CAACR,SAAS;MACRuB,IAAI,EAAEI,KAAK,CAACJ,IAAK;MACjBM,KAAK,EAAC,eAAe;MACrBC,WAAW,EAAC,+BAA4B;MACxCC,SAAS;MACTC,QAAQ;MACRC,KAAK,EAAEN,KAAK,CAACM,KAAM;MACnBC,QAAQ,EAAEP,KAAK,CAACO,QAAS;MACzBC,MAAM,EAAER,KAAK,CAACQ,MAAO;MACrBC,OAAO,EAAET,KAAK,CAACS,OAAQ;MACvBC,KAAK,EAAET,IAAI,CAACU,OAAO,IAAIV,IAAI,CAACS;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAEN,CAAC;EAED,OACElC,OAAA,CAACF,IAAI;IACHa,QAAQ,EAAEA;IACV;IAAA;IACAwB,MAAM,EAAEC,KAAA;MAAA,IAAC;QAAEC;MAAa,CAAC,GAAAD,KAAA;MAAA,OACvBpC,OAAA;QAAMW,QAAQ,EAAE0B,YAAa;QAAAC,QAAA,EAC3BtC,OAAA,CAACH,KAAK;UAACkB,IAAI,EAAC,WAAW;UAACE,cAAc,EAAEzB;QAAU;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ;AAAC/B,EAAA,CAtJeF,WAAW;EAAA,QAERL,WAAW;AAAA;AAAA2C,EAAA,GAFdtC,WAAW;AAuJ3B,MAAMuC,YAAY,GAAGjD,GAAI;AACzB;AACA,CAAC;AAED,MAAMkD,iBAAiB,GAAGlD,GAAI;AAC9B;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMmD,WAAW,GAAGnD,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMoD,YAAY,GAAGpD,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,IAAAgD,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}