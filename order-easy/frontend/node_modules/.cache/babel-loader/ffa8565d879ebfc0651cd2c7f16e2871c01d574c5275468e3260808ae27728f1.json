{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Select = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar SelectMulti_1 = require(\"./SelectMulti/SelectMulti\");\nvar SelectSingle_1 = require(\"./SelectSingle/SelectSingle\");\nfunction Select(props) {\n  var multiple = props.multiple,\n    onChange = props.onChange,\n    value = props.value,\n    itemIsEqual = props.itemIsEqual,\n    style = props.style,\n    rest = __rest(props, [\"multiple\", \"onChange\", \"value\", \"itemIsEqual\", \"style\"]);\n  var checkedValue = value;\n  if (multiple && value && !Array.isArray(value)) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(\"Trying to set an object as value for <Select multiple /> but it should be an array\");\n    }\n    checkedValue = value ? [value] : [];\n  }\n  if (!multiple && value && Array.isArray(value)) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(\"Trying to set an array as value for <Select /> but it should be an object.\" + \" Set the 'multiple' prop if it can have multiple values\");\n    }\n    checkedValue = value[0];\n  }\n  if (props.multiple && props.createNewItem) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(\"Select does not support props 'createNewItem' and 'multiple' together\");\n    }\n  }\n  if (multiple) {\n    return react_1.default.createElement(SelectMulti_1.SelectMulti, __assign({}, rest, {\n      value: checkedValue,\n      onChange: onChange,\n      itemIsEqual: itemIsEqual\n    }));\n  } else {\n    return react_1.default.createElement(SelectSingle_1.SelectSingle, __assign({}, rest, {\n      value: checkedValue,\n      onChange: onChange,\n      style: style\n    }));\n  }\n}\nexports.Select = Select;\n//# sourceMappingURL=Select.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}