{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStyles = exports.MonthView = void 0;\nvar react_1 = __importStar(require(\"react\"));\nvar styles_1 = require(\"../../styles\");\nvar locale_1 = require(\"../../util/locale\");\nvar util_1 = require(\"./util\");\nfunction MonthView(props) {\n  var onlyWeeks = props.onlyWeeks,\n    visibleDate = props.visibleDate,\n    renderDay = props.renderDay,\n    renderWeekName = props.renderWeekName,\n    onDayClick = props.onDayClick,\n    onDayHover = props.onDayHover,\n    onWeekClick = props.onWeekClick,\n    onWeekHover = props.onWeekHover,\n    createDateStyles = props.createDateStyles;\n  var _a = styles_1.useStyles(exports.createStyles),\n    classes = _a.classes,\n    css = _a.css;\n  var month = react_1.useMemo(function () {\n    return util_1.createMonthMatrix(visibleDate);\n  }, [visibleDate]);\n  var handleDayClick = react_1.useCallback(function (day) {\n    return function () {\n      return onDayClick(day);\n    };\n  }, [onDayClick]);\n  var handleDayHover = react_1.useCallback(function (day) {\n    return function () {\n      return onDayHover(day);\n    };\n  }, [onDayHover]);\n  var handleWeekClick = react_1.useCallback(function (week) {\n    return function () {\n      return onWeekClick(week);\n    };\n  }, [onWeekClick]);\n  var handleWeekHover = react_1.useCallback(function (week) {\n    return function () {\n      return onWeekHover(week);\n    };\n  }, [onWeekHover]);\n  return react_1.default.createElement(\"table\", {\n    className: classes.table\n  }, react_1.default.createElement(\"thead\", null, react_1.default.createElement(\"tr\", null, month[0].map(function (day, d) {\n    return react_1.default.createElement(\"th\", {\n      key: d\n    }, renderWeekName(day));\n  }))), react_1.default.createElement(\"tbody\", null, month.map(function (week, w) {\n    return react_1.default.createElement(\"tr\", {\n      key: w,\n      className: onlyWeeks ? css(classes.week, createDateStyles({\n        start: week[0],\n        end: week[6]\n      }, props)) : undefined,\n      onClick: onlyWeeks ? handleWeekClick({\n        start: week[0],\n        end: week[6]\n      }) : undefined,\n      onMouseOver: onlyWeeks ? handleWeekHover({\n        start: week[0],\n        end: week[6]\n      }) : undefined,\n      \"data-week\": onlyWeeks ? week[0].toLocaleDateString('pt-BR') + \"-\" + week[6].toLocaleDateString('pt-BR') : undefined\n    }, week.map(function (day, d) {\n      return react_1.default.createElement(\"td\", {\n        key: d,\n        \"data-date\": onlyWeeks ? undefined : day.toISOString().slice(0, 10)\n      }, react_1.default.createElement(\"span\", {\n        className: onlyWeeks ? undefined : css(classes.day, createDateStyles(day, props)),\n        onClick: onlyWeeks ? undefined : handleDayClick(day),\n        onMouseOver: onlyWeeks ? undefined : handleDayHover(day),\n        role: 'button',\n        \"aria-selected\": onlyWeeks ? undefined : props.isDaySelected && props.isDaySelected(day)\n      }, renderDay(day)));\n    }));\n  })));\n}\nexports.MonthView = MonthView;\nMonthView.defaultProps = {\n  onDayClick: function () {\n    return null;\n  },\n  onDayHover: function () {\n    return null;\n  },\n  onWeekClick: function () {\n    return null;\n  },\n  onWeekHover: function () {\n    return null;\n  },\n  onlyWeeks: false,\n  createDateStyles: function () {\n    return null;\n  },\n  renderDay: function (day) {\n    var dayFormatter = new Intl.DateTimeFormat(locale_1.getUserLocale(), {\n      day: '2-digit'\n    });\n    return dayFormatter.format(day);\n  },\n  renderWeekName: function (firstWeekDay) {\n    var weekFormatter = new Intl.DateTimeFormat(locale_1.getUserLocale(), {\n      weekday: 'narrow'\n    });\n    return weekFormatter.format(firstWeekDay);\n  }\n};\nexports.createStyles = function (theme) {\n  return {\n    table: {\n      borderCollapse: 'separate',\n      textAlign: 'center',\n      lineHeight: '1.5rem',\n      width: '100%',\n      borderSpacing: '0 0.25rem',\n      th: {\n        width: '2rem',\n        padding: '0.25rem 0'\n      },\n      'tr td:first-child': {\n        borderTopLeftRadius: '10%',\n        borderBottomLeftRadius: '10%'\n      },\n      'tr td:last-child': {\n        borderTopRightRadius: '10%',\n        borderBottomRightRadius: '10%'\n      }\n    },\n    day: {\n      width: '2rem',\n      padding: '0.25rem 0',\n      display: 'inline-block',\n      borderRadius: '50%',\n      ':hover': {\n        cursor: 'pointer',\n        background: theme.pallete.surface.background\n      }\n    },\n    week: {\n      padding: '0.25rem 0',\n      ':hover': {\n        cursor: 'pointer',\n        background: theme.pallete.surface.background\n      }\n    },\n    active: {\n      background: theme.pallete.primary.main,\n      color: theme.pallete.surface.main\n    }\n  };\n};\n//# sourceMappingURL=MonthView.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}