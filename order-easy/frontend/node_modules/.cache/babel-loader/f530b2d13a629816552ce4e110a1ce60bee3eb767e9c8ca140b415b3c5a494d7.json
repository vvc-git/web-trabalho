{"ast":null,"code":"var _jsxFileName = \"/home/daniel/\\xC1rea de Trabalho/Trabalho de Web/web-trabalho/order-easy/src/components/TableOrders.tsx\";\n/** @jsxImportSource @emotion/react */\nimport { PagedTable } from \"bold-ui\";\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport function TableOrder() {\n  const options = [{\n    pedido: 1,\n    item: \"Coca Cola\",\n    quantidade: 2\n  }, {\n    pedido: 2,\n    item: \"Sopa\",\n    quantidade: 1\n  }, {\n    pedido: 3,\n    item: \"Bolachinha\",\n    quantidade: 5\n  }];\n  const renderId = row => {\n    return row.id;\n  };\n  const renderPedido = row => {\n    return row.pedido;\n  };\n  const renderQuantidade = row => {\n    return row.quantidade;\n  };\n  return _jsxDEV(PagedTable, {\n    style: tableOrderStyles,\n    columns: [{\n      header: \"Pedido\",\n      name: \"pedido\",\n      render: renderIne,\n      sortable: true\n    }, {\n      header: \"Item\",\n      name: \"item\",\n      render: renderIne,\n      sortable: true\n    }, {\n      header: \"Quantidade\",\n      name: \"quantidade\",\n      render: renderIne,\n      sortable: true\n    }, {\n      name: \"buttons\",\n      render: renderIne,\n      style: {\n        textAlign: \"right\"\n      }\n    }],\n    onPageChange: function noRefCheck() {},\n    onSizeChange: function noRefCheck() {},\n    onSortChange: function noRefCheck() {},\n    page: 0,\n    rows: options,\n    size: 12,\n    sizeOptions: [10, 30, 50, 100],\n    sort: [\"-id\", \"name\"],\n    totalElements: 10,\n    totalPages: 1\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_c = TableOrder;\nconst tableOrderStyles = css`\n  font-size: 0.9rem !important;\n`;\nvar _c;\n$RefreshReg$(_c, \"TableOrder\");","map":{"version":3,"names":["PagedTable","css","React","jsxDEV","_jsxDEV","TableOrder","options","pedido","item","quantidade","renderId","row","id","renderPedido","renderQuantidade","style","tableOrderStyles","columns","header","name","render","renderIne","sortable","textAlign","onPageChange","noRefCheck","onSizeChange","onSortChange","page","rows","size","sizeOptions","sort","totalElements","totalPages","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/daniel/Área de Trabalho/Trabalho de Web/web-trabalho/order-easy/src/components/TableOrders.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { PagedTable } from \"bold-ui\";\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\n\ninterface ItemType {\n  pedido: number;\n  item: string;\n  quantidade: number;\n}\n\nexport function TableOrder() {\n  const options = [\n    {\n      pedido: 1,\n      item: \"Coca Cola\",\n      quantidade: 2,\n    },\n    {\n      pedido: 2,\n      item: \"Sopa\",\n      quantidade: 1,\n    },\n    {\n      pedido: 3,\n      item: \"Bolachinha\",\n      quantidade: 5,\n    },\n  ];\n\n  const renderId = (row: ItemType) => {\n    return row.id;\n  };\n\n  const renderPedido = (row: ItemType) => {\n    return row.pedido;\n  };\n\n  const renderQuantidade = (row: ItemType) => {\n    return row.quantidade;\n  };\n\n  return (\n    <PagedTable<ItemType>\n      style={tableOrderStyles}\n      columns={[\n        {\n          header: \"Pedido\",\n          name: \"pedido\",\n          render: renderIne,\n          sortable: true,\n        },\n        {\n          header: \"Item\",\n          name: \"item\",\n          render: renderIne,\n          sortable: true,\n        },\n        {\n          header: \"Quantidade\",\n          name: \"quantidade\",\n          render: renderIne,\n          sortable: true,\n        },\n        {\n          name: \"buttons\",\n          render: renderIne,\n          style: {\n            textAlign: \"right\",\n          },\n        },\n      ]}\n      onPageChange={function noRefCheck() {}}\n      onSizeChange={function noRefCheck() {}}\n      onSortChange={function noRefCheck() {}}\n      page={0}\n      rows={options}\n      size={12}\n      sizeOptions={[10, 30, 50, 100]}\n      sort={[\"-id\", \"name\"]}\n      totalElements={10}\n      totalPages={1}\n    />\n  );\n}\n\nconst tableOrderStyles = css`\n  font-size: 0.9rem !important;\n`;\n"],"mappings":";AAAA;AACA,SAASA,UAAU,QAAQ,SAAS;AACpC,SAASC,GAAG,QAAQ,gBAAgB;AACpC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1B,OAAO,SAASC,UAAUA,CAAA,EAAG;EAC3B,MAAMC,OAAO,GAAG,CACd;IACEC,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE,WAAW;IACjBC,UAAU,EAAE;EACd,CAAC,EACD;IACEF,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE,MAAM;IACZC,UAAU,EAAE;EACd,CAAC,EACD;IACEF,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE,YAAY;IAClBC,UAAU,EAAE;EACd,CAAC,CACF;EAED,MAAMC,QAAQ,GAAIC,GAAa,IAAK;IAClC,OAAOA,GAAG,CAACC,EAAE;EACf,CAAC;EAED,MAAMC,YAAY,GAAIF,GAAa,IAAK;IACtC,OAAOA,GAAG,CAACJ,MAAM;EACnB,CAAC;EAED,MAAMO,gBAAgB,GAAIH,GAAa,IAAK;IAC1C,OAAOA,GAAG,CAACF,UAAU;EACvB,CAAC;EAED,OACEL,OAAA,CAACJ,UAAU;IACTe,KAAK,EAAEC,gBAAiB;IACxBC,OAAO,EAAE,CACP;MACEC,MAAM,EAAE,QAAQ;MAChBC,IAAI,EAAE,QAAQ;MACdC,MAAM,EAAEC,SAAS;MACjBC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEJ,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE,MAAM;MACZC,MAAM,EAAEC,SAAS;MACjBC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEJ,MAAM,EAAE,YAAY;MACpBC,IAAI,EAAE,YAAY;MAClBC,MAAM,EAAEC,SAAS;MACjBC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEH,IAAI,EAAE,SAAS;MACfC,MAAM,EAAEC,SAAS;MACjBN,KAAK,EAAE;QACLQ,SAAS,EAAE;MACb;IACF,CAAC,CACD;IACFC,YAAY,EAAE,SAASC,UAAUA,CAAA,EAAG,CAAC,CAAE;IACvCC,YAAY,EAAE,SAASD,UAAUA,CAAA,EAAG,CAAC,CAAE;IACvCE,YAAY,EAAE,SAASF,UAAUA,CAAA,EAAG,CAAC,CAAE;IACvCG,IAAI,EAAE,CAAE;IACRC,IAAI,EAAEvB,OAAQ;IACdwB,IAAI,EAAE,EAAG;IACTC,WAAW,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAE;IAC/BC,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,CAAE;IACtBC,aAAa,EAAE,EAAG;IAClBC,UAAU,EAAE;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEN;AAACC,EAAA,GAzEelC,UAAU;AA2E1B,MAAMW,gBAAgB,GAAGf,GAAI;AAC7B;AACA,CAAC;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}