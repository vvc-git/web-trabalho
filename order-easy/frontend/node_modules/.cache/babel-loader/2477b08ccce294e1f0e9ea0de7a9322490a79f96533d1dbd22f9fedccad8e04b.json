{"ast":null,"code":"export const formatNumberWithTwoDigits = number => number < 10 ? `0${number}` : String(number);\nconst options = [{\n  id: 1,\n  order: \"Coca Cola\",\n  amount: 2,\n  price: 20.0\n}, {\n  id: 2,\n  order: \"Sopa\",\n  amount: 1,\n  price: 20.0\n}, {\n  id: 3,\n  order: \"Bolachinha\",\n  amount: 5,\n  price: 20.0\n}, {\n  id: 2,\n  order: \"Sopa\",\n  amount: 1,\n  price: 20.0\n}, {\n  id: 3,\n  order: \"Bolachinha\",\n  amount: 5,\n  price: 20.0\n}, {\n  id: 1,\n  order: \"Coca Cola\",\n  amount: 2,\n  price: 20.0\n}, {\n  id: 2,\n  order: \"Sopa\",\n  amount: 1,\n  price: 20.0\n}, {\n  id: 3,\n  order: \"Bolachinha\",\n  amount: 5,\n  price: 20.0\n}, {\n  id: 2,\n  order: \"Sopa\",\n  amount: 1,\n  price: 20.0\n}, {\n  id: 3,\n  order: \"Bolachinha\",\n  amount: 5,\n  price: 20.0\n}];","map":{"version":3,"names":["formatNumberWithTwoDigits","number","String","options","id","order","amount","price"],"sources":["/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/components/Helpers.ts"],"sourcesContent":["export const formatNumberWithTwoDigits = (number: number): string =>\n  number < 10 ? `0${number}` : String(number);\n\nconst options = [\n  {\n    id: 1,\n    order: \"Coca Cola\",\n    amount: 2,\n    price: 20.0,\n  },\n  {\n    id: 2,\n    order: \"Sopa\",\n    amount: 1,\n    price: 20.0,\n  },\n  {\n    id: 3,\n    order: \"Bolachinha\",\n    amount: 5,\n    price: 20.0,\n  },\n  {\n    id: 2,\n    order: \"Sopa\",\n    amount: 1,\n    price: 20.0,\n  },\n  {\n    id: 3,\n    order: \"Bolachinha\",\n    amount: 5,\n    price: 20.0,\n  },\n  {\n    id: 1,\n    order: \"Coca Cola\",\n    amount: 2,\n    price: 20.0,\n  },\n  {\n    id: 2,\n    order: \"Sopa\",\n    amount: 1,\n    price: 20.0,\n  },\n  {\n    id: 3,\n    order: \"Bolachinha\",\n    amount: 5,\n    price: 20.0,\n  },\n  {\n    id: 2,\n    order: \"Sopa\",\n    amount: 1,\n    price: 20.0,\n  },\n  {\n    id: 3,\n    order: \"Bolachinha\",\n    amount: 5,\n    price: 20.0,\n  },\n];\n"],"mappings":"AAAA,OAAO,MAAMA,yBAAyB,GAAIC,MAAc,IACtDA,MAAM,GAAG,EAAE,GAAI,IAAGA,MAAO,EAAC,GAAGC,MAAM,CAACD,MAAM,CAAC;AAE7C,MAAME,OAAO,GAAG,CACd;EACEC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,WAAW;EAClBC,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,YAAY;EACnBC,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,YAAY;EACnBC,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,WAAW;EAClBC,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,YAAY;EACnBC,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,YAAY;EACnBC,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE;AACT,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}