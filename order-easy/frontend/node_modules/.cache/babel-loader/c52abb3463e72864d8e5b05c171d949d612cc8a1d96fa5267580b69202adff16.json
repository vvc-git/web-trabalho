{"ast":null,"code":"var _jsxFileName = \"/home/daniel/\\xC1rea de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/components/ModalConfirm.tsx\";\n/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nexport function ModalConfirm(props) {\n  const {\n    open,\n    onClose,\n    onChange,\n    title,\n    description\n  } = props;\n  return _jsxDEV(_Fragment, {\n    children: _jsxDEV(Modal, {\n      show: open,\n      onHide: onClose,\n      children: [_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: _jsxDEV(Modal.Title, {\n          children: \"Modal heading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), _jsxDEV(Modal.Body, {\n        children: \"Woohoo, you are reading this text in a modal!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), _jsxDEV(Modal.Footer, {\n        children: [_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), _jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = ModalConfirm;\nconst modalStyles = css`\n  @media (max-width: 767px) {\n    min-width: 100% !important;\n  }\n`;\nvar _c;\n$RefreshReg$(_c, \"ModalConfirm\");","map":{"version":3,"names":["css","React","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","ModalConfirm","props","open","onClose","onChange","title","description","children","show","onHide","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Footer","Button","variant","onClick","handleClose","_c","modalStyles","$RefreshReg$"],"sources":["/home/daniel/√Årea de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/components/ModalConfirm.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\n\nimport React from \"react\";\nimport { Modal } from \"react-bootstrap\";\n\ninterface ModalConfirmProps {\n  open: boolean;\n  onClose(): void;\n  onChange(): void;\n  title: string;\n  description: string;\n}\n\nexport function ModalConfirm(props: ModalConfirmProps) {\n  const { open, onClose, onChange, title, description } = props;\n\n  return (\n    <>\n      <Modal show={open} onHide={onClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Woohoo, you are reading this text in a modal!</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nconst modalStyles = css`\n  @media (max-width: 767px) {\n    min-width: 100% !important;\n  }\n`;\n"],"mappings":";AAAA;AACA,SAASA,GAAG,QAAQ,gBAAgB;AAEpC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAUxC,OAAO,SAASC,YAAYA,CAACC,KAAwB,EAAE;EACrD,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAGL,KAAK;EAE7D,OACEJ,OAAA,CAAAE,SAAA;IAAAQ,QAAA,EACEV,OAAA,CAACF,KAAK;MAACa,IAAI,EAAEN,IAAK;MAACO,MAAM,EAAEN,OAAQ;MAAAI,QAAA,GACjCV,OAAA,CAACF,KAAK,CAACe,MAAM;QAACC,WAAW;QAAAJ,QAAA,EACvBV,OAAA,CAACF,KAAK,CAACiB,KAAK;UAAAL,QAAA,EAAC;QAAa;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,EACfnB,OAAA,CAACF,KAAK,CAACsB,IAAI;QAAAV,QAAA,EAAC;MAA6C;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,EACtEnB,OAAA,CAACF,KAAK,CAACuB,MAAM;QAAAX,QAAA,GACXV,OAAA,CAACsB,MAAM;UAACC,OAAO,EAAC,WAAW;UAACC,OAAO,EAAEC,WAAY;UAAAf,QAAA,EAAC;QAElD;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACTnB,OAAA,CAACsB,MAAM;UAACC,OAAO,EAAC,SAAS;UAACC,OAAO,EAAEC,WAAY;UAAAf,QAAA,EAAC;QAEhD;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC,gBACR,CAAC;AAEP;AAACO,EAAA,GArBevB,YAAY;AAuB5B,MAAMwB,WAAW,GAAG/B,GAAI;AACxB;AACA;AACA;AACA,CAAC;AAAC,IAAA8B,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}