{"ast":null,"code":"var _jsxFileName = \"/home/daniel/\\xC1rea de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/view/DeskView.tsx\",\n  _s = $RefreshSig$();\n/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { Button, Cell, Grid } from \"bold-ui\";\nimport { Fragment, useState } from \"react\";\nimport { ModalOrder } from \"../components/ModalOrder\";\nimport React from \"react\";\nimport { RepeatComponent } from \"../components/RepeatComponent\";\nimport { formatNumberWithTwoDigits } from \"../components/Helpers\";\nimport { Header } from \"../components/Header\";\nimport { PageContainer } from \"../components/PageContainer\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport function DeskView(props) {\n  _s();\n  const {\n    numDesks\n  } = props;\n  const [isModalOrderOpen, setIsModalOrderOpen] = useState(false);\n  const [tableNumer, setTableNumber] = useState(\"0\");\n  const renderRepeatedContent = index => _jsxDEV(Cell, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    lg: 3,\n    children: _jsxDEV(Button, {\n      block: true,\n      kind: \"primary\",\n      onClick: () => handleButtonClick(index.toString()),\n      size: \"large\",\n      skin: \"default\",\n      children: [\"MESA \", formatNumberWithTwoDigits(index)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n  const handleButtonClick = numberTable => {\n    setIsModalOrderOpen(true);\n    setTableNumber(numberTable);\n  };\n  return _jsxDEV(Fragment, {\n    children: [_jsxDEV(Header, {\n      title: \"In\\xEDcio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), _jsxDEV(ModalOrder, {\n      open: isModalOrderOpen,\n      onClose: () => setIsModalOrderOpen(false),\n      tableNumer: tableNumer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), _jsxDEV(PageContainer, {\n      children: _jsxDEV(Grid, {\n        alignItems: \"center\",\n        direction: \"row\",\n        gap: 2,\n        gapVertical: 2,\n        justifyContent: \"center\",\n        wrap: true,\n        style: gridStyles,\n        children: _jsxDEV(RepeatComponent, {\n          times: numDesks,\n          children: renderRepeatedContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(DeskView, \"19jcTbjNFBMuoOJ82L7Q+vinYLk=\");\n_c = DeskView;\nconst gridStyles = css`\n  //width: 100%;\n`;\nvar _c;\n$RefreshReg$(_c, \"DeskView\");","map":{"version":3,"names":["css","Button","Cell","Grid","Fragment","useState","ModalOrder","React","RepeatComponent","formatNumberWithTwoDigits","Header","PageContainer","jsxDEV","_jsxDEV","DeskView","props","_s","numDesks","isModalOrderOpen","setIsModalOrderOpen","tableNumer","setTableNumber","renderRepeatedContent","index","xs","sm","md","lg","children","block","kind","onClick","handleButtonClick","toString","size","skin","fileName","_jsxFileName","lineNumber","columnNumber","numberTable","title","open","onClose","alignItems","direction","gap","gapVertical","justifyContent","wrap","style","gridStyles","times","_c","$RefreshReg$"],"sources":["/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/view/DeskView.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { Button, Cell, Grid } from \"bold-ui\";\nimport { Fragment, useState } from \"react\";\nimport { ModalOrder } from \"../components/ModalOrder\";\nimport React from \"react\";\nimport { RepeatComponent } from \"../components/RepeatComponent\";\nimport { formatNumberWithTwoDigits } from \"../components/Helpers\";\nimport { Header } from \"../components/Header\";\nimport { PageContainer } from \"../components/PageContainer\";\n\ninterface DeskViewProps {\n  numDesks: number;\n}\n\nexport function DeskView(props: DeskViewProps) {\n  const { numDesks } = props;\n  const [isModalOrderOpen, setIsModalOrderOpen] = useState(false);\n  const [tableNumer, setTableNumber] = useState(\"0\");\n\n  const renderRepeatedContent = (index: number) => (\n    <Cell xs={12} sm={6} md={4} lg={3}>\n      <Button\n        block\n        kind=\"primary\"\n        onClick={() => handleButtonClick(index.toString())}\n        size=\"large\"\n        skin=\"default\"\n      >\n        MESA {formatNumberWithTwoDigits(index)}\n      </Button>\n    </Cell>\n  );\n\n  const handleButtonClick = (numberTable: string) => {\n    setIsModalOrderOpen(true);\n    setTableNumber(numberTable);\n  };\n\n  return (\n    <Fragment>\n      <Header title=\"Início\"></Header>\n      <ModalOrder\n        open={isModalOrderOpen}\n        onClose={() => setIsModalOrderOpen(false)}\n        tableNumer={tableNumer}\n      ></ModalOrder>\n      <PageContainer>\n        <Grid\n          alignItems=\"center\"\n          direction=\"row\"\n          gap={2}\n          gapVertical={2}\n          justifyContent=\"center\"\n          wrap\n          style={gridStyles}\n        >\n          <RepeatComponent times={numDesks}>\n            {renderRepeatedContent}\n          </RepeatComponent>\n        </Grid>\n      </PageContainer>\n    </Fragment>\n  );\n}\n\nconst gridStyles = css`\n  //width: 100%;\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}