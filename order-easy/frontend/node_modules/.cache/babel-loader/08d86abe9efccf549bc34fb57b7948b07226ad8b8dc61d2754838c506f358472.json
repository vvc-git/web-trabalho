{"ast":null,"code":"var _jsxFileName = \"/home/daniel/\\xC1rea de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/view/ListUsersView.tsx\";\n/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { Button, DataTable, Icon, Tooltip } from \"bold-ui\";\nimport React from \"react\";\nimport { Header } from \"../components/Header\";\nimport { PageContainer } from \"../components/PageContainer\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nexport function ListUsersView(props) {\n  const {\n    num,\n    perfil\n  } = props;\n  const options = [{\n    name: \"José Daniel Alves do Prado\",\n    type: \"Supervisor\"\n  }, {\n    name: \"Victor do Valle\",\n    type: \"Supervisor\"\n  }, {\n    name: \"Ana Cláudia Gonçaves da Silva\",\n    type: \"Caixa\"\n  }, {\n    name: \"Fernanda Cezar da Costa\",\n    type: \"Caixa\"\n  }, {\n    name: \"Giovana Aparecida dos Santos\",\n    type: \"Caixa\"\n  }, {\n    name: \"Leonardo Ribeiro de Alencar Bueno\",\n    type: \"Atendimento\"\n  }, {\n    name: \"Gustavo Aurélio de Oliveira\",\n    type: \"Atendimento\"\n  }];\n  const renderName = row => {\n    return row.name;\n  };\n  const renderType = row => {\n    return row.type;\n  };\n  const renderButtonTrash = () => {\n    return _jsxDEV(Tooltip, {\n      text: \"Excluir\",\n      children: _jsxDEV(Button, {\n        size: \"small\",\n        skin: \"ghost\",\n        onClick: () => {},\n        children: _jsxDEV(Icon, {\n          icon: \"trashOutline\",\n          style: trachIconStyles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  };\n  const renderButtonPen = () => {\n    return _jsxDEV(Tooltip, {\n      text: \"Editar\",\n      children: _jsxDEV(Button, {\n        size: \"small\",\n        skin: \"ghost\",\n        onClick: () => {},\n        children: _jsxDEV(Icon, {\n          icon: \"penOutline\",\n          style: penIconStyles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(Header, {\n      title: \"Usu\\xE1rios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), _jsxDEV(PageContainer, {\n      children: _jsxDEV(\"div\", {\n        css: divTableStyles,\n        children: _jsxDEV(DataTable, {\n          style: tableOrderStyles,\n          columns: [{\n            header: \"Nome\",\n            name: \"name\",\n            render: renderName\n          }, {\n            header: \"Tipo\",\n            name: \"type\",\n            render: renderType\n          }, {\n            name: \"buttons\",\n            render: renderButton,\n            style: {\n              textAlign: \"right\"\n            }\n          }],\n          hovered: true,\n          rows: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = ListUsersView;\nconst tableOrderStyles = css`\n  font-size: 0.9rem !important;\n  border: none;\n\n  thead {\n    background-color: #0069d0;\n    color: white;\n    height: 3.25rem;\n  }\n\n  thead span {\n    cursor: auto;\n  }\n`;\nconst trachIconStyles = css`\n  color: rgb(208, 30, 41) !important;\n`;\nconst penIconStyles = css`\n  color: #232323 !important;\n`;\nconst divTableStyles = css`\n  overflow: auto;\n  border: 1px solid #d3d4dd;\n  border-radius: 0.375rem !important;\n  border-bottom: none;\n`;\nvar _c;\n$RefreshReg$(_c, \"ListUsersView\");","map":{"version":3,"names":["css","Button","DataTable","Icon","Tooltip","React","Header","PageContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","ListUsersView","props","num","perfil","options","name","type","renderName","row","renderType","renderButtonTrash","text","children","size","skin","onClick","icon","style","trachIconStyles","fileName","_jsxFileName","lineNumber","columnNumber","renderButtonPen","penIconStyles","title","divTableStyles","tableOrderStyles","columns","header","render","renderButton","textAlign","hovered","rows","_c","$RefreshReg$"],"sources":["/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/view/ListUsersView.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { Button, Cell, DataTable, Grid, Icon, Tooltip, VFlow } from \"bold-ui\";\nimport React from \"react\";\nimport { Header } from \"../components/Header\";\nimport { PageContainer } from \"../components/PageContainer\";\n\ninterface ListUsersViewProps {\n  num?: number;\n  perfil?: boolean;\n}\n\ninterface ItemType {\n  name: string;\n  type: string;\n}\n\nexport function ListUsersView(props: ListUsersViewProps) {\n  const { num, perfil } = props;\n  const options = [\n    {\n      name: \"José Daniel Alves do Prado\",\n      type: \"Supervisor\",\n    },\n    {\n      name: \"Victor do Valle\",\n      type: \"Supervisor\",\n    },\n    {\n      name: \"Ana Cláudia Gonçaves da Silva\",\n      type: \"Caixa\",\n    },\n    {\n      name: \"Fernanda Cezar da Costa\",\n      type: \"Caixa\",\n    },\n    {\n      name: \"Giovana Aparecida dos Santos\",\n      type: \"Caixa\",\n    },\n    {\n      name: \"Leonardo Ribeiro de Alencar Bueno\",\n      type: \"Atendimento\",\n    },\n    {\n      name: \"Gustavo Aurélio de Oliveira\",\n      type: \"Atendimento\",\n    },\n  ];\n\n  const renderName = (row: ItemType) => {\n    return row.name;\n  };\n\n  const renderType = (row: ItemType) => {\n    return row.type;\n  };\n\n  const renderButtonTrash = () => {\n    return (\n      <Tooltip text=\"Excluir\">\n        <Button size=\"small\" skin=\"ghost\" onClick={() => {}}>\n          <Icon icon=\"trashOutline\" style={trachIconStyles} />\n        </Button>\n      </Tooltip>\n    );\n  };\n\n  const renderButtonPen = () => {\n    return (\n      <Tooltip text=\"Editar\">\n        <Button size=\"small\" skin=\"ghost\" onClick={() => {}}>\n          <Icon icon=\"penOutline\" style={penIconStyles} />\n        </Button>\n      </Tooltip>\n    );\n  };\n  return (\n    <>\n      <Header title=\"Usuários\"></Header>\n      <PageContainer>\n        <div css={divTableStyles}>\n          <DataTable<ItemType>\n            style={tableOrderStyles}\n            columns={[\n              {\n                header: \"Nome\",\n                name: \"name\",\n                render: renderName,\n              },\n              {\n                header: \"Tipo\",\n                name: \"type\",\n                render: renderType,\n              },\n              {\n                name: \"buttons\",\n                render: renderButton,\n                style: {\n                  textAlign: \"right\",\n                },\n              },\n            ]}\n            hovered\n            rows={options}\n          />\n        </div>\n      </PageContainer>\n    </>\n  );\n}\nconst tableOrderStyles = css`\n  font-size: 0.9rem !important;\n  border: none;\n\n  thead {\n    background-color: #0069d0;\n    color: white;\n    height: 3.25rem;\n  }\n\n  thead span {\n    cursor: auto;\n  }\n`;\n\nconst trachIconStyles = css`\n  color: rgb(208, 30, 41) !important;\n`;\n\nconst penIconStyles = css`\n  color: #232323 !important;\n`;\n\nconst divTableStyles = css`\n  overflow: auto;\n  border: 1px solid #d3d4dd;\n  border-radius: 0.375rem !important;\n  border-bottom: none;\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}