{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformRangeReferenceMonth = exports.disabledByMonth = exports.isSameReferenceMonth = exports.isGreaterThan = exports.isLessThan = exports.isLessOrEqualThan = exports.isGreaterOrEqualThan = void 0;\n/**\n * Check if the first reference month is bigger than or equal to the second reference month\n *\n * @param month1 First reference month\n * @param month2 Second reference month\n */\nexports.isGreaterOrEqualThan = function (month1, month2) {\n  return exports.isGreaterThan(month1, month2) || exports.isSameReferenceMonth(month1, month2);\n};\n/**\n * Check if the first reference month is less than or equal to the second reference month\n *\n * @param month1 First reference month\n * @param month2 Second reference month\n */\nexports.isLessOrEqualThan = function (month1, month2) {\n  return exports.isLessThan(month1, month2) || exports.isSameReferenceMonth(month1, month2);\n};\n/**\n * Check if the first reference month is less than the second reference month\n *\n * @param month1 First reference month\n * @param month2 Second reference month\n */\nexports.isLessThan = function (month1, month2) {\n  if ((month1 === null || month1 === void 0 ? void 0 : month1.year) === (month2 === null || month2 === void 0 ? void 0 : month2.year)) {\n    return (month1 === null || month1 === void 0 ? void 0 : month1.month) < (month2 === null || month2 === void 0 ? void 0 : month2.month);\n  } else {\n    return (month1 === null || month1 === void 0 ? void 0 : month1.year) < (month2 === null || month2 === void 0 ? void 0 : month2.year);\n  }\n};\n/**\n * Check if the first reference month is bigger than the second reference month\n *\n * @param month1 First reference month\n * @param month2 Second reference month\n */\nexports.isGreaterThan = function (month1, month2) {\n  if ((month1 === null || month1 === void 0 ? void 0 : month1.year) === (month2 === null || month2 === void 0 ? void 0 : month2.year)) {\n    return (month1 === null || month1 === void 0 ? void 0 : month1.month) > (month2 === null || month2 === void 0 ? void 0 : month2.month);\n  } else {\n    return (month1 === null || month1 === void 0 ? void 0 : month1.year) > (month2 === null || month2 === void 0 ? void 0 : month2.year);\n  }\n};\n/**\n * Check if the first reference month is equal to the second reference month\n *\n * @param month1 First reference month\n * @param month2 Second reference month\n */\nexports.isSameReferenceMonth = function (month1, month2) {\n  return (month1 === null || month1 === void 0 ? void 0 : month1.year) === (month2 === null || month2 === void 0 ? void 0 : month2.year) && (month1 === null || month1 === void 0 ? void 0 : month1.month) === (month2 === null || month2 === void 0 ? void 0 : month2.month);\n};\n/**\n * Check if a reference month is between the minimum and maximum values\n *\n * @param minMonth The minimum value\n * @param maxMonth The maximum value\n */\nexports.disabledByMonth = function (minMonth, maxMonth) {\n  return function (month) {\n    return minMonth && exports.isLessThan(month, minMonth) || maxMonth && exports.isGreaterThan(month, maxMonth);\n  };\n};\n/**\n * Transform a range reference month in date range\n *\n * @param range The range to be transformed\n */\nexports.transformRangeReferenceMonth = function (range) {\n  return {\n    startDate: range.start ? new Date(range.start.year, range.start.month, 1, 0, 0, 0) : undefined,\n    endDate: range.end ? new Date(range.end.year, range.end.month + 1, 0, 0, 0, 0) : undefined\n  };\n};\n//# sourceMappingURL=util.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}