{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ControlledDateRangeCalendar = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar DateRangeCalendar_1 = require(\"./DateRangeCalendar\");\nfunction ControlledDateRangeCalendar(props) {\n  var inputOnFocus = props.inputOnFocus,\n    onChange = props.onChange,\n    value = props.value,\n    onDayClick = props.onDayClick,\n    onlyWeeks = props.onlyWeeks,\n    rest = __rest(props, [\"inputOnFocus\", \"onChange\", \"value\", \"onDayClick\", \"onlyWeeks\"]);\n  var controllDayClick = function (day) {\n    onDayClick && onDayClick(day);\n    if (inputOnFocus === 1) {\n      if (day < (value === null || value === void 0 ? void 0 : value.startDate)) {\n        onChange({\n          startDate: day,\n          endDate: value === null || value === void 0 ? void 0 : value.endDate\n        });\n      } else if (day > (value === null || value === void 0 ? void 0 : value.endDate)) {\n        onChange({\n          startDate: day,\n          endDate: undefined\n        });\n      } else {\n        onChange({\n          startDate: day,\n          endDate: value === null || value === void 0 ? void 0 : value.endDate\n        });\n      }\n      return;\n    }\n    if (inputOnFocus === 2) {\n      if ((value === null || value === void 0 ? void 0 : value.endDate) && day < (value === null || value === void 0 ? void 0 : value.startDate)) {\n        onChange({\n          startDate: day,\n          endDate: undefined\n        });\n      } else {\n        onChange({\n          startDate: value === null || value === void 0 ? void 0 : value.startDate,\n          endDate: day\n        });\n      }\n      return;\n    }\n  };\n  var controllWeekClick = function (week) {\n    var firstDayWeek = week.start;\n    var lastDayWeek = week.end;\n    onDayClick && onDayClick(firstDayWeek);\n    var startDate = value === null || value === void 0 ? void 0 : value.startDate;\n    var endDate = value === null || value === void 0 ? void 0 : value.endDate;\n    if (inputOnFocus === 1) {\n      if (firstDayWeek < (value === null || value === void 0 ? void 0 : value.startDate)) {\n        startDate = firstDayWeek;\n      } else if (firstDayWeek > (value === null || value === void 0 ? void 0 : value.endDate)) {\n        startDate = firstDayWeek;\n        endDate = lastDayWeek;\n      } else {\n        startDate = firstDayWeek;\n      }\n      onChange({\n        startDate: startDate,\n        endDate: endDate\n      });\n      return;\n    }\n    if (inputOnFocus === 2) {\n      if ((value === null || value === void 0 ? void 0 : value.endDate) && firstDayWeek < (value === null || value === void 0 ? void 0 : value.startDate)) {\n        startDate = firstDayWeek;\n        endDate = lastDayWeek;\n      } else {\n        endDate = lastDayWeek;\n      }\n      onChange({\n        startDate: startDate,\n        endDate: endDate\n      });\n      return;\n    }\n  };\n  return react_1.default.createElement(DateRangeCalendar_1.DateRangeCalendar, __assign({}, rest, {\n    value: value,\n    onWeekClick: controllWeekClick,\n    onDayClick: controllDayClick,\n    inputOnFocus: inputOnFocus,\n    onlyWeeks: onlyWeeks\n  }));\n}\nexports.ControlledDateRangeCalendar = ControlledDateRangeCalendar;\nControlledDateRangeCalendar.defaultProps = {\n  onChange: function () {\n    return null;\n  },\n  onDayClick: function () {\n    return null;\n  }\n};\n//# sourceMappingURL=ControlledDateRangeCalendar.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}