{"ast":null,"code":"var _jsxFileName = \"/home/daniel/\\xC1rea de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/view/ListUsersView.tsx\";\n/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { Button, DataTable, Icon, Tooltip } from \"bold-ui\";\nimport React from \"react\";\nimport { Header } from \"../components/Header\";\nimport { PageContainer } from \"../components/PageContainer\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nexport function ListUsersView(props) {\n  const {\n    num,\n    perfil\n  } = props;\n  const options = [{\n    name: \"José Daniel Alves do Prado\",\n    type: \"Supervisor\"\n  }, {\n    name: \"Victor do Valle\",\n    type: \"Supervisor\"\n  }, {\n    name: \"Ana Cláudia Gonçaves da Silva\",\n    type: \"Caixa\"\n  }, {\n    name: \"Fernanda Cezar da Costa\",\n    type: \"Caixa\"\n  }, {\n    name: \"Giovana Aparecida dos Santos\",\n    type: \"Caixa\"\n  }, {\n    name: \"Leonardo Ribeiro de Alencar Bueno\",\n    type: \"Atendimento\"\n  }, {\n    name: \"Gustavo Aurélio de Oliveira\",\n    type: \"Atendimento\"\n  }];\n  const renderName = row => {\n    return row.name;\n  };\n  const renderType = row => {\n    return row.type;\n  };\n  const renderButton = () => {\n    return _jsxDEV(_Fragment, {\n      children: [_jsxDEV(Tooltip, {\n        text: \"Editar\",\n        children: _jsxDEV(Button, {\n          size: \"small\",\n          skin: \"ghost\",\n          onClick: () => {},\n          children: _jsxDEV(Icon, {\n            icon: \"penOutline\",\n            style: penIconStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), _jsxDEV(Tooltip, {\n        text: \"Excluir\",\n        children: _jsxDEV(Button, {\n          size: \"small\",\n          skin: \"ghost\",\n          onClick: () => {},\n          children: _jsxDEV(Icon, {\n            icon: \"trashOutline\",\n            style: trachIconStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  const renderButtonPen = () => {\n    return _jsxDEV(_Fragment, {\n      children: [_jsxDEV(Tooltip, {\n        text: \"Editar\",\n        children: _jsxDEV(Button, {\n          size: \"small\",\n          skin: \"ghost\",\n          onClick: () => {},\n          children: _jsxDEV(Icon, {\n            icon: \"penOutline\",\n            style: penIconStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), _jsxDEV(Tooltip, {\n        text: \"Excluir\",\n        children: _jsxDEV(Button, {\n          size: \"small\",\n          skin: \"ghost\",\n          onClick: () => {},\n          children: _jsxDEV(Icon, {\n            icon: \"trashOutline\",\n            style: trachIconStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(Header, {\n      title: \"Usu\\xE1rios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), _jsxDEV(PageContainer, {\n      children: _jsxDEV(\"div\", {\n        css: divTableStyles,\n        children: _jsxDEV(DataTable, {\n          style: tableOrderStyles,\n          columns: [{\n            header: \"Nome\",\n            name: \"name\",\n            render: renderName\n          }, {\n            header: \"Tipo\",\n            name: \"type\",\n            render: renderType\n          }, {\n            name: \"buttons\",\n            render: renderButton,\n            style: {\n              textAlign: \"right\"\n            }\n          }],\n          hovered: true,\n          rows: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = ListUsersView;\nconst tableOrderStyles = css`\n  font-size: 0.9rem !important;\n  border: none;\n\n  thead {\n    background-color: #0069d0;\n    color: white;\n    height: 3.25rem;\n  }\n\n  thead span {\n    cursor: auto;\n  }\n`;\nconst trachIconStyles = css`\n  color: rgb(208, 30, 41) !important;\n`;\nconst penIconStyles = css`\n  color: #232323 !important;\n`;\nconst divTableStyles = css`\n  overflow: auto;\n  border: 1px solid #d3d4dd;\n  border-radius: 0.375rem !important;\n  border-bottom: none;\n`;\nvar _c;\n$RefreshReg$(_c, \"ListUsersView\");","map":{"version":3,"names":["css","Button","DataTable","Icon","Tooltip","React","Header","PageContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","ListUsersView","props","num","perfil","options","name","type","renderName","row","renderType","renderButton","children","text","size","skin","onClick","icon","style","penIconStyles","fileName","_jsxFileName","lineNumber","columnNumber","trachIconStyles","renderButtonPen","title","divTableStyles","tableOrderStyles","columns","header","render","textAlign","hovered","rows","_c","$RefreshReg$"],"sources":["/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/view/ListUsersView.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { Button, Cell, DataTable, Grid, Icon, Tooltip, VFlow } from \"bold-ui\";\nimport React from \"react\";\nimport { Header } from \"../components/Header\";\nimport { PageContainer } from \"../components/PageContainer\";\n\ninterface ListUsersViewProps {\n  num?: number;\n  perfil?: boolean;\n}\n\ninterface ItemType {\n  name: string;\n  type: string;\n}\n\nexport function ListUsersView(props: ListUsersViewProps) {\n  const { num, perfil } = props;\n  const options = [\n    {\n      name: \"José Daniel Alves do Prado\",\n      type: \"Supervisor\",\n    },\n    {\n      name: \"Victor do Valle\",\n      type: \"Supervisor\",\n    },\n    {\n      name: \"Ana Cláudia Gonçaves da Silva\",\n      type: \"Caixa\",\n    },\n    {\n      name: \"Fernanda Cezar da Costa\",\n      type: \"Caixa\",\n    },\n    {\n      name: \"Giovana Aparecida dos Santos\",\n      type: \"Caixa\",\n    },\n    {\n      name: \"Leonardo Ribeiro de Alencar Bueno\",\n      type: \"Atendimento\",\n    },\n    {\n      name: \"Gustavo Aurélio de Oliveira\",\n      type: \"Atendimento\",\n    },\n  ];\n\n  const renderName = (row: ItemType) => {\n    return row.name;\n  };\n\n  const renderType = (row: ItemType) => {\n    return row.type;\n  };\n\n  const renderButton = () => {\n    return (\n      <>\n        <Tooltip text=\"Editar\">\n          <Button size=\"small\" skin=\"ghost\" onClick={() => {}}>\n            <Icon icon=\"penOutline\" style={penIconStyles} />\n          </Button>\n        </Tooltip>\n        <Tooltip text=\"Excluir\">\n          <Button size=\"small\" skin=\"ghost\" onClick={() => {}}>\n            <Icon icon=\"trashOutline\" style={trachIconStyles} />\n          </Button>\n        </Tooltip>\n      </>\n    );\n  };\n\n  const renderButtonPen = () => {\n    return (\n      <>\n        <Tooltip text=\"Editar\">\n          <Button size=\"small\" skin=\"ghost\" onClick={() => {}}>\n            <Icon icon=\"penOutline\" style={penIconStyles} />\n          </Button>\n        </Tooltip>\n        <Tooltip text=\"Excluir\">\n          <Button size=\"small\" skin=\"ghost\" onClick={() => {}}>\n            <Icon icon=\"trashOutline\" style={trachIconStyles} />\n          </Button>\n        </Tooltip>\n      </>\n    );\n  };\n  return (\n    <>\n      <Header title=\"Usuários\"></Header>\n      <PageContainer>\n        <div css={divTableStyles}>\n          <DataTable<ItemType>\n            style={tableOrderStyles}\n            columns={[\n              {\n                header: \"Nome\",\n                name: \"name\",\n                render: renderName,\n              },\n              {\n                header: \"Tipo\",\n                name: \"type\",\n                render: renderType,\n              },\n              {\n                name: \"buttons\",\n                render: renderButton,\n                style: {\n                  textAlign: \"right\",\n                },\n              },\n            ]}\n            hovered\n            rows={options}\n          />\n        </div>\n      </PageContainer>\n    </>\n  );\n}\nconst tableOrderStyles = css`\n  font-size: 0.9rem !important;\n  border: none;\n\n  thead {\n    background-color: #0069d0;\n    color: white;\n    height: 3.25rem;\n  }\n\n  thead span {\n    cursor: auto;\n  }\n`;\n\nconst trachIconStyles = css`\n  color: rgb(208, 30, 41) !important;\n`;\n\nconst penIconStyles = css`\n  color: #232323 !important;\n`;\n\nconst divTableStyles = css`\n  overflow: auto;\n  border: 1px solid #d3d4dd;\n  border-radius: 0.375rem !important;\n  border-bottom: none;\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}