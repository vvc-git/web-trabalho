{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformRangeReferenceMonth = exports.disabledByMonth = exports.isSameReferenceMonth = exports.isGreaterThan = exports.isLessThan = exports.isLessOrEqualThan = exports.isGreaterOrEqualThan = void 0;\n/**\n * Check if the first reference month is bigger than or equal to the second reference month\n *\n * @param month1 First reference month\n * @param month2 Second reference month\n */\nexports.isGreaterOrEqualThan = function (month1, month2) {\n  return exports.isGreaterThan(month1, month2) || exports.isSameReferenceMonth(month1, month2);\n};\n/**\n * Check if the first reference month is less than or equal to the second reference month\n *\n * @param month1 First reference month\n * @param month2 Second reference month\n */\nexports.isLessOrEqualThan = function (month1, month2) {\n  return exports.isLessThan(month1, month2) || exports.isSameReferenceMonth(month1, month2);\n};\n/**\n * Check if the first reference month is less than the second reference month\n *\n * @param month1 First reference month\n * @param month2 Second reference month\n */\nexports.isLessThan = function (month1, month2) {\n  if ((month1 === null || month1 === void 0 ? void 0 : month1.year) === (month2 === null || month2 === void 0 ? void 0 : month2.year)) {\n    return (month1 === null || month1 === void 0 ? void 0 : month1.month) < (month2 === null || month2 === void 0 ? void 0 : month2.month);\n  } else {\n    return (month1 === null || month1 === void 0 ? void 0 : month1.year) < (month2 === null || month2 === void 0 ? void 0 : month2.year);\n  }\n};\n/**\n * Check if the first reference month is bigger than the second reference month\n *\n * @param month1 First reference month\n * @param month2 Second reference month\n */\nexports.isGreaterThan = function (month1, month2) {\n  if ((month1 === null || month1 === void 0 ? void 0 : month1.year) === (month2 === null || month2 === void 0 ? void 0 : month2.year)) {\n    return (month1 === null || month1 === void 0 ? void 0 : month1.month) > (month2 === null || month2 === void 0 ? void 0 : month2.month);\n  } else {\n    return (month1 === null || month1 === void 0 ? void 0 : month1.year) > (month2 === null || month2 === void 0 ? void 0 : month2.year);\n  }\n};\n/**\n * Check if the first reference month is equal to the second reference month\n *\n * @param month1 First reference month\n * @param month2 Second reference month\n */\nexports.isSameReferenceMonth = function (month1, month2) {\n  return (month1 === null || month1 === void 0 ? void 0 : month1.year) === (month2 === null || month2 === void 0 ? void 0 : month2.year) && (month1 === null || month1 === void 0 ? void 0 : month1.month) === (month2 === null || month2 === void 0 ? void 0 : month2.month);\n};\n/**\n * Check if a reference month is between the minimum and maximum values\n *\n * @param minMonth The minimum value\n * @param maxMonth The maximum value\n */\nexports.disabledByMonth = function (minMonth, maxMonth) {\n  return function (month) {\n    return minMonth && exports.isLessThan(month, minMonth) || maxMonth && exports.isGreaterThan(month, maxMonth);\n  };\n};\n/**\n * Transform a range reference month in date range\n *\n * @param range The range to be transformed\n */\nexports.transformRangeReferenceMonth = function (range) {\n  return {\n    startDate: range.start ? new Date(range.start.year, range.start.month, 1, 0, 0, 0) : undefined,\n    endDate: range.end ? new Date(range.end.year, range.end.month + 1, 0, 0, 0, 0) : undefined\n  };\n};","map":{"version":3,"names":["exports","isGreaterOrEqualThan","month1","month2","isGreaterThan","isSameReferenceMonth","isLessOrEqualThan","isLessThan","year","month","disabledByMonth","minMonth","maxMonth","transformRangeReferenceMonth","range","startDate","start","Date","undefined","endDate","end"],"sources":["../../../src/components/MonthRangePicker/util.tsx"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}