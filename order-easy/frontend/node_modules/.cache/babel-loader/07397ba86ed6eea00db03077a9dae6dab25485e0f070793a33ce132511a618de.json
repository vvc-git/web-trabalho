{"ast":null,"code":"var _jsxFileName = \"/home/daniel/\\xC1rea de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/view/DeskView.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Cell, Grid } from \"bold-ui\";\nimport { Fragment, useState } from \"react\";\nimport { ModalOrder } from \"../components/ModalOrder\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const numDesks = numDesks => Array.from({\n  length: numDesks\n}, (_, index) => index + 1);\nexport function DeskView(props) {\n  _s();\n  const {\n    numDesks\n  } = props;\n  const [isModalOrderOpen, setIsModalOrderOpen] = useState(false);\n  const [tableNumer, setTableNumber] = useState(\"0\");\n  const handleButtonClick = numberTable => {\n    setIsModalOrderOpen(true);\n    setTableNumber(numberTable);\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalOrder, {\n      open: isModalOrderOpen,\n      onClose: () => setIsModalOrderOpen(false),\n      tableNumer: tableNumer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"center\",\n      direction: \"row\",\n      gap: 2,\n      gapVertical: 2,\n      justifyContent: \"center\",\n      wrap: true,\n      children: numDesks(12).map(value => /*#__PURE__*/_jsxDEV(Cell, {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          block: true,\n          kind: \"primary\",\n          onClick: () => handleButtonClick(value.toString()),\n          size: \"large\",\n          skin: \"default\",\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(DeskView, \"19jcTbjNFBMuoOJ82L7Q+vinYLk=\");\n_c = DeskView;\nvar _c;\n$RefreshReg$(_c, \"DeskView\");","map":{"version":3,"names":["Button","Cell","Grid","Fragment","useState","ModalOrder","React","jsxDEV","_jsxDEV","numDesks","Array","from","length","_","index","DeskView","props","_s","isModalOrderOpen","setIsModalOrderOpen","tableNumer","setTableNumber","handleButtonClick","numberTable","children","open","onClose","fileName","_jsxFileName","lineNumber","columnNumber","alignItems","direction","gap","gapVertical","justifyContent","wrap","map","value","xs","sm","md","lg","block","kind","onClick","toString","size","skin","_c","$RefreshReg$"],"sources":["/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/view/DeskView.tsx"],"sourcesContent":["import { Button, Cell, Grid } from \"bold-ui\";\nimport { Fragment, useState } from \"react\";\nimport { ModalOrder } from \"../components/ModalOrder\";\nimport React from \"react\";\nimport { PageContainer } from \"../components/PageContainer\";\n\ninterface DeskViewProps {\n  numDesks: number;\n}\n\nexport const numDesks = (numDesks: number) =>\n  Array.from({ length: numDesks }, (_, index) => index + 1);\n\nexport function DeskView(props: DeskViewProps) {\n  const { numDesks } = props;\n  const [isModalOrderOpen, setIsModalOrderOpen] = useState(false);\n  const [tableNumer, setTableNumber] = useState(\"0\");\n\n  const handleButtonClick = (numberTable: string) => {\n    setIsModalOrderOpen(true);\n    setTableNumber(numberTable);\n  };\n\n  return (\n    <Fragment>\n      <ModalOrder\n        open={isModalOrderOpen}\n        onClose={() => setIsModalOrderOpen(false)}\n        tableNumer={tableNumer}\n      ></ModalOrder>\n      <Grid\n        alignItems=\"center\"\n        direction=\"row\"\n        gap={2}\n        gapVertical={2}\n        justifyContent=\"center\"\n        wrap\n      >\n        {numDesks(12).map((value) => (\n          <Cell xs={12} sm={6} md={4} lg={3}>\n            <Button\n              block\n              kind=\"primary\"\n              onClick={() => handleButtonClick(value.toString())}\n              size=\"large\"\n              skin=\"default\"\n            >\n              {value}\n            </Button>\n          </Cell>\n        ))}\n      </Grid>\n    </Fragment>\n  );\n}\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,IAAI,EAAEC,IAAI,QAAQ,SAAS;AAC5C,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AAC1C,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,OAAO,MAAMC,QAAQ,GAAIA,QAAgB,IACvCC,KAAK,CAACC,IAAI,CAAC;EAAEC,MAAM,EAAEH;AAAS,CAAC,EAAE,CAACI,CAAC,EAAEC,KAAK,KAAKA,KAAK,GAAG,CAAC,CAAC;AAE3D,OAAO,SAASC,QAAQA,CAACC,KAAoB,EAAE;EAAAC,EAAA;EAC7C,MAAM;IAAER;EAAS,CAAC,GAAGO,KAAK;EAC1B,MAAM,CAACE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACgB,UAAU,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,GAAG,CAAC;EAElD,MAAMkB,iBAAiB,GAAIC,WAAmB,IAAK;IACjDJ,mBAAmB,CAAC,IAAI,CAAC;IACzBE,cAAc,CAACE,WAAW,CAAC;EAC7B,CAAC;EAED,oBACEf,OAAA,CAACL,QAAQ;IAAAqB,QAAA,gBACPhB,OAAA,CAACH,UAAU;MACToB,IAAI,EAAEP,gBAAiB;MACvBQ,OAAO,EAAEA,CAAA,KAAMP,mBAAmB,CAAC,KAAK,CAAE;MAC1CC,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACdtB,OAAA,CAACN,IAAI;MACH6B,UAAU,EAAC,QAAQ;MACnBC,SAAS,EAAC,KAAK;MACfC,GAAG,EAAE,CAAE;MACPC,WAAW,EAAE,CAAE;MACfC,cAAc,EAAC,QAAQ;MACvBC,IAAI;MAAAZ,QAAA,EAEHf,QAAQ,CAAC,EAAE,CAAC,CAAC4B,GAAG,CAAEC,KAAK,iBACtB9B,OAAA,CAACP,IAAI;QAACsC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAlB,QAAA,eAChChB,OAAA,CAACR,MAAM;UACL2C,KAAK;UACLC,IAAI,EAAC,SAAS;UACdC,OAAO,EAAEA,CAAA,KAAMvB,iBAAiB,CAACgB,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAE;UACnDC,IAAI,EAAC,OAAO;UACZC,IAAI,EAAC,SAAS;UAAAxB,QAAA,EAEbc;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEf;AAACb,EAAA,CAzCeF,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}