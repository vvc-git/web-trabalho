{"ast":null,"code":"var _jsxFileName = \"/home/daniel/\\xC1rea de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/components/ModalConfirm.tsx\";\n/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { Button, Heading, HFlow, Icon, Modal, ModalBody, ModalFooter, Text, VFlow } from \"bold-ui\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nexport function ModalConfirm(props) {\n  const {\n    open,\n    onClose,\n    onChange,\n    title,\n    description\n  } = props;\n  return _jsxDEV(_Fragment, {\n    children: _jsxDEV(Modal, {\n      size: \"small\",\n      onClose: onClose,\n      open: open,\n      style: modalStyles,\n      children: [_jsxDEV(ModalBody, {\n        children: _jsxDEV(VFlow, {\n          children: [_jsxDEV(HFlow, {\n            alignItems: \"center\",\n            children: [_jsxDEV(Icon, {\n              icon: \"infoCircleFilled\",\n              style: {\n                marginRight: \"0.5rem\"\n              },\n              size: 3,\n              fill: \"info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), _jsxDEV(Heading, {\n              level: 1,\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            component: \"p\",\n            variant: \"main\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), _jsxDEV(ModalFooter, {\n        children: _jsxDEV(HFlow, {\n          justifyContent: \"flex-end\",\n          children: [_jsxDEV(Button, {\n            kind: \"danger\",\n            onClick: onClose,\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), _jsxDEV(Button, {\n            kind: \"primary\",\n            onClick: onChange,\n            children: \"Concluir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = ModalConfirm;\nconst modalStyles = css`\n  @media (max-width: 767px) {\n    min-width: 100% !important;\n  }\n`;\nvar _c;\n$RefreshReg$(_c, \"ModalConfirm\");","map":{"version":3,"names":["css","Button","Heading","HFlow","Icon","Modal","ModalBody","ModalFooter","Text","VFlow","React","jsxDEV","_jsxDEV","Fragment","_Fragment","ModalConfirm","props","open","onClose","onChange","title","description","children","size","style","modalStyles","alignItems","icon","marginRight","fill","fileName","_jsxFileName","lineNumber","columnNumber","level","component","variant","justifyContent","kind","onClick","_c","$RefreshReg$"],"sources":["/home/daniel/√Årea de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/src/components/ModalConfirm.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport {\n  Button,\n  Heading,\n  HFlow,\n  Icon,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  Text,\n  VFlow,\n} from \"bold-ui\";\nimport React from \"react\";\n\ninterface ModalConfirmProps {\n  open: boolean;\n  onClose(): void;\n  onChange(): void;\n  title: string;\n  description: string;\n}\n\nexport function ModalConfirm(props: ModalConfirmProps) {\n  const { open, onClose, onChange, title, description } = props;\n\n  return (\n    <>\n      <Modal size=\"small\" onClose={onClose} open={open} style={modalStyles}>\n        <ModalBody>\n          <VFlow>\n            <HFlow alignItems=\"center\">\n              <Icon\n                icon=\"infoCircleFilled\"\n                style={{ marginRight: \"0.5rem\" }}\n                size={3}\n                fill=\"info\"\n              />\n              <Heading level={1}>{title}</Heading>\n            </HFlow>\n            <Text component=\"p\" variant=\"main\">\n              {description}\n            </Text>\n          </VFlow>\n        </ModalBody>\n        <ModalFooter>\n          <HFlow justifyContent=\"flex-end\">\n            <Button kind=\"danger\" onClick={onClose}>\n              Cancelar\n            </Button>\n            <Button kind=\"primary\" onClick={onChange}>\n              Concluir\n            </Button>\n          </HFlow>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n\nconst modalStyles = css`\n  @media (max-width: 767px) {\n    min-width: 100% !important;\n  }\n`;\n"],"mappings":";AAAA;AACA,SAASA,GAAG,QAAQ,gBAAgB;AACpC,SACEC,MAAM,EACNC,OAAO,EACPC,KAAK,EACLC,IAAI,EACJC,KAAK,EACLC,SAAS,EACTC,WAAW,EACXC,IAAI,EACJC,KAAK,QACA,SAAS;AAChB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAU1B,OAAO,SAASC,YAAYA,CAACC,KAAwB,EAAE;EACrD,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAGL,KAAK;EAE7D,OACEJ,OAAA,CAAAE,SAAA;IAAAQ,QAAA,EACEV,OAAA,CAACP,KAAK;MAACkB,IAAI,EAAC,OAAO;MAACL,OAAO,EAAEA,OAAQ;MAACD,IAAI,EAAEA,IAAK;MAACO,KAAK,EAAEC,WAAY;MAAAH,QAAA,GACnEV,OAAA,CAACN,SAAS;QAAAgB,QAAA,EACRV,OAAA,CAACH,KAAK;UAAAa,QAAA,GACJV,OAAA,CAACT,KAAK;YAACuB,UAAU,EAAC,QAAQ;YAAAJ,QAAA,GACxBV,OAAA,CAACR,IAAI;cACHuB,IAAI,EAAC,kBAAkB;cACvBH,KAAK,EAAE;gBAAEI,WAAW,EAAE;cAAS,CAAE;cACjCL,IAAI,EAAE,CAAE;cACRM,IAAI,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ,CAAC,EACFrB,OAAA,CAACV,OAAO;cAACgC,KAAK,EAAE,CAAE;cAAAZ,QAAA,EAAEF;YAAK;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC,EACRrB,OAAA,CAACJ,IAAI;YAAC2B,SAAS,EAAC,GAAG;YAACC,OAAO,EAAC,MAAM;YAAAd,QAAA,EAC/BD;UAAW;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EACZrB,OAAA,CAACL,WAAW;QAAAe,QAAA,EACVV,OAAA,CAACT,KAAK;UAACkC,cAAc,EAAC,UAAU;UAAAf,QAAA,GAC9BV,OAAA,CAACX,MAAM;YAACqC,IAAI,EAAC,QAAQ;YAACC,OAAO,EAAErB,OAAQ;YAAAI,QAAA,EAAC;UAExC;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACTrB,OAAA,CAACX,MAAM;YAACqC,IAAI,EAAC,SAAS;YAACC,OAAO,EAAEpB,QAAS;YAAAG,QAAA,EAAC;UAE1C;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC,gBACR,CAAC;AAEP;AAACO,EAAA,GAnCezB,YAAY;AAqC5B,MAAMU,WAAW,GAAGzB,GAAI;AACxB;AACA;AACA;AACA,CAAC;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}