{"ast":null,"code":"var _jsxFileName = \"/home/daniel/\\xC1rea de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/view/DeskView.tsx\",\n  _s2 = $RefreshSig$();\n/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { Button, Cell, Grid, Tooltip } from \"bold-ui\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { ModalOrder } from \"../components/ModalOrder\";\nimport React from \"react\";\nimport { RepeatComponent } from \"../components/RepeatComponent\";\nimport { formatNumberWithTwoDigits, mesasOcupadas } from \"../components/Helpers\";\nimport { Header } from \"../components/Header\";\nimport { PageContainer } from \"../components/PageContainer\";\nimport { ModalConfirm } from \"../components/ModalConfirm\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport function DeskView(props) {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    numDesks\n  } = props;\n  const [isModalOrderOpen, setIsModalOrderOpen] = useState(false);\n  const [isModalConfirmReservation, setIsModalConfirmReservation] = useState(false);\n  const [tableNumer, setTableNumber] = useState(0);\n  const renderRepeatedContent = index => {\n    _s();\n    const mesaOcupada = mesasOcupadas.find(item => item === index);\n    const typeButton = mesaOcupada ? \"danger\" : \"primary\";\n    const textTooltip = mesaOcupada ? \"Ocupado\" : \"Clique para reservar\";\n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const response = await axios.get(\"http://localhost:4000/data\"); // Substitua a URL pela rota da sua API que retorna os valores do banco de dados\n          setData(response.data);\n        } catch (error) {\n          console.log(\"Ocorreu um erro na requisição:\", error.message);\n        }\n      };\n      fetchData(); // Chama a função fetchData ao montar o componente\n\n      // Define um intervalo para atualizar os dados periodicamente (opcional)\n      const intervalId = setInterval(fetchData, 5000); // Atualiza a cada 5 segundos (ajuste conforme necessário)\n\n      // Função de limpeza para parar o intervalo quando o componente for desmontado\n      return () => {\n        clearInterval(intervalId);\n      };\n    }, []);\n    return _jsxDEV(Cell, {\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      children: _jsxDEV(Tooltip, {\n        text: textTooltip,\n        children: _jsxDEV(Button, {\n          block: true,\n          kind: typeButton,\n          onClick: () => handleButtonClick(index, mesaOcupada),\n          size: \"large\",\n          skin: \"default\",\n          children: [\"MESA \", formatNumberWithTwoDigits(index)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  };\n  _s(renderRepeatedContent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  const handleButtonClick = (numberTable, mesaOcupada) => {\n    mesaOcupada ? setIsModalOrderOpen(true) : setIsModalConfirmReservation(true);\n    setTableNumber(numberTable);\n  };\n  const reservarMesa = async () => {\n    console.log(\"Entrei\");\n    try {\n      const response = await axios.post(\"http://localhost:4000/cadastroMesa\", {\n        numero: tableNumer\n      });\n      setIsModalConfirmReservation(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const descriptionModalConfirm = _jsxDEV(\"p\", {\n    children: [\"Voc\\xEA deseja reservar a\", _jsxDEV(\"span\", {\n      css: boldTableNumberStyle,\n      children: [\" \", \"MESA \", formatNumberWithTwoDigits(tableNumer)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), \"?\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n  return _jsxDEV(Fragment, {\n    children: [_jsxDEV(Header, {\n      title: \"In\\xEDcio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), _jsxDEV(ModalOrder, {\n      open: isModalOrderOpen,\n      onClose: () => setIsModalOrderOpen(false),\n      tableNumer: tableNumer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), _jsxDEV(ModalConfirm, {\n      open: isModalConfirmReservation,\n      onClose: () => setIsModalConfirmReservation(false),\n      onChange: reservarMesa,\n      title: \"Confirmar reserva?\",\n      description: descriptionModalConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), _jsxDEV(PageContainer, {\n      children: _jsxDEV(Grid, {\n        alignItems: \"center\",\n        direction: \"row\",\n        gap: 2,\n        gapVertical: 2,\n        justifyContent: \"center\",\n        wrap: true,\n        children: _jsxDEV(RepeatComponent, {\n          times: numDesks,\n          children: renderRepeatedContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s2(DeskView, \"ii08fwBZyzmhwt3cbaAwRFuedrk=\");\n_c = DeskView;\nconst boldTableNumberStyle = css`\n  font-weight: bold;\n`;\nvar _c;\n$RefreshReg$(_c, \"DeskView\");","map":{"version":3,"names":["css","Button","Cell","Grid","Tooltip","Fragment","useEffect","useState","ModalOrder","React","RepeatComponent","formatNumberWithTwoDigits","mesasOcupadas","Header","PageContainer","ModalConfirm","axios","jsxDEV","_jsxDEV","DeskView","props","_s2","_s","$RefreshSig$","numDesks","isModalOrderOpen","setIsModalOrderOpen","isModalConfirmReservation","setIsModalConfirmReservation","tableNumer","setTableNumber","renderRepeatedContent","index","mesaOcupada","find","item","typeButton","textTooltip","fetchData","response","get","setData","data","error","console","log","message","intervalId","setInterval","clearInterval","xs","sm","md","lg","children","text","block","kind","onClick","handleButtonClick","size","skin","fileName","_jsxFileName","lineNumber","columnNumber","numberTable","reservarMesa","post","numero","descriptionModalConfirm","boldTableNumberStyle","title","open","onClose","onChange","description","alignItems","direction","gap","gapVertical","justifyContent","wrap","times","_c","$RefreshReg$"],"sources":["/home/daniel/Área de Trabalho/Trabalho-ProgWeb/web-trabalho/order-easy/frontend/src/view/DeskView.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { Button, Cell, Grid, Tooltip } from \"bold-ui\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { ModalOrder } from \"../components/ModalOrder\";\nimport React from \"react\";\nimport { RepeatComponent } from \"../components/RepeatComponent\";\nimport {\n  formatNumberWithTwoDigits,\n  mesasOcupadas,\n} from \"../components/Helpers\";\nimport { Header } from \"../components/Header\";\nimport { PageContainer } from \"../components/PageContainer\";\nimport { ModalConfirm } from \"../components/ModalConfirm\";\nimport axios from \"axios\";\n\ninterface DeskViewProps {\n  numDesks: number;\n}\n\nexport function DeskView(props: DeskViewProps) {\n  const { numDesks } = props;\n  const [isModalOrderOpen, setIsModalOrderOpen] = useState(false);\n  const [isModalConfirmReservation, setIsModalConfirmReservation] =\n    useState(false);\n  const [tableNumer, setTableNumber] = useState(0);\n\n  const renderRepeatedContent = (index: number) => {\n    const mesaOcupada = mesasOcupadas.find((item) => item === index);\n    const typeButton = mesaOcupada ? \"danger\" : \"primary\";\n    const textTooltip = mesaOcupada ? \"Ocupado\" : \"Clique para reservar\";\n\n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const response = await axios.get(\"http://localhost:4000/data\"); // Substitua a URL pela rota da sua API que retorna os valores do banco de dados\n          setData(response.data);\n        } catch (error) {\n          console.log(\"Ocorreu um erro na requisição:\", error.message);\n        }\n      };\n\n      fetchData(); // Chama a função fetchData ao montar o componente\n\n      // Define um intervalo para atualizar os dados periodicamente (opcional)\n      const intervalId = setInterval(fetchData, 5000); // Atualiza a cada 5 segundos (ajuste conforme necessário)\n\n      // Função de limpeza para parar o intervalo quando o componente for desmontado\n      return () => {\n        clearInterval(intervalId);\n      };\n    }, []);\n\n    return (\n      <Cell xs={12} sm={6} md={4} lg={3}>\n        <Tooltip text={textTooltip}>\n          <Button\n            block\n            kind={typeButton}\n            onClick={() => handleButtonClick(index, mesaOcupada)}\n            size=\"large\"\n            skin=\"default\"\n          >\n            MESA {formatNumberWithTwoDigits(index)}\n          </Button>\n        </Tooltip>\n      </Cell>\n    );\n  };\n\n  const handleButtonClick = (\n    numberTable: number,\n    mesaOcupada: number | undefined\n  ) => {\n    mesaOcupada\n      ? setIsModalOrderOpen(true)\n      : setIsModalConfirmReservation(true);\n    setTableNumber(numberTable);\n  };\n\n  const reservarMesa = async () => {\n    console.log(\"Entrei\");\n    try {\n      const response = await axios.post(\"http://localhost:4000/cadastroMesa\", {\n        numero: tableNumer,\n      });\n      setIsModalConfirmReservation(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const descriptionModalConfirm = (\n    <p>\n      Você deseja reservar a\n      <span css={boldTableNumberStyle}>\n        {\" \"}\n        MESA {formatNumberWithTwoDigits(tableNumer)}\n      </span>\n      ?\n    </p>\n  );\n\n  return (\n    <Fragment>\n      <Header title=\"Início\"></Header>\n      <ModalOrder\n        open={isModalOrderOpen}\n        onClose={() => setIsModalOrderOpen(false)}\n        tableNumer={tableNumer}\n      ></ModalOrder>\n      <ModalConfirm\n        open={isModalConfirmReservation}\n        onClose={() => setIsModalConfirmReservation(false)}\n        onChange={reservarMesa}\n        title={\"Confirmar reserva?\"}\n        description={descriptionModalConfirm}\n      ></ModalConfirm>\n      <PageContainer>\n        <Grid\n          alignItems=\"center\"\n          direction=\"row\"\n          gap={2}\n          gapVertical={2}\n          justifyContent=\"center\"\n          wrap\n        >\n          <RepeatComponent times={numDesks}>\n            {renderRepeatedContent}\n          </RepeatComponent>\n        </Grid>\n      </PageContainer>\n    </Fragment>\n  );\n}\n\nconst boldTableNumberStyle = css`\n  font-weight: bold;\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}