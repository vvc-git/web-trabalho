{"ast":null,"code":"\"use strict\";\n\n// From downshift examples\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MultiDownshift = void 0;\nvar downshift_1 = __importDefault(require(\"downshift\"));\nvar react_1 = __importStar(require(\"react\"));\nvar util_1 = require(\"../../../util\");\nvar SelectDownshift_1 = require(\"../SelectSingle/SelectDownshift\");\nfunction MultiDownshift(props) {\n  var downshiftRef = react_1.useRef();\n  var _a = react_1.useState(props.selectedItems),\n    selectedItems = _a[0],\n    setSelectedItems = _a[1];\n  var _b = react_1.useState(false),\n    changed = _b[0],\n    setChanged = _b[1];\n  react_1.useEffect(function () {\n    setSelectedItems(props.selectedItems);\n  }, [props.selectedItems]);\n  react_1.useEffect(function () {\n    if (downshiftRef.current && changed) {\n      props.onChange && props.onChange(selectedItems, getStateAndHelpers(downshiftRef.current));\n      props.onSelect && props.onSelect(selectedItems, getStateAndHelpers(downshiftRef.current));\n      setChanged(false);\n    }\n  }, [selectedItems]);\n  var isSelected = function (item) {\n    return util_1.some(selectedItems, function (i) {\n      return props.itemIsEqual(i, item);\n    });\n  };\n  var handleChange = function (selectedItem) {\n    if (selectedItem) {\n      if (isSelected(selectedItem)) {\n        removeItem(selectedItem);\n      } else {\n        addItem(selectedItem);\n      }\n    }\n  };\n  var removeItem = function (selectedItem) {\n    setChanged(true);\n    setSelectedItems(function (currentItems) {\n      return currentItems.filter(function (item) {\n        return !props.itemIsEqual(selectedItem, item);\n      });\n    });\n  };\n  var addItem = function (item) {\n    setChanged(true);\n    if (!isSelected(item)) {\n      setSelectedItems(function (currentItems) {\n        return __spreadArrays(currentItems, [item]);\n      });\n    }\n  };\n  var getStateAndHelpers = function (downshift) {\n    downshiftRef.current = downshift;\n    return __assign(__assign({}, downshift), {\n      selectedItems: selectedItems,\n      isSelected: isSelected,\n      addItem: addItem,\n      removeItem: removeItem\n    });\n  };\n  var children = props.children,\n    onSelect = props.onSelect,\n    rest = __rest(props\n    // TODO: compose together props (rather than overwriting them) like downshift does\n    , [\"children\", \"onSelect\"]);\n  // TODO: compose together props (rather than overwriting them) like downshift does\n  return react_1.default.createElement(SelectDownshift_1.SelectDownshift, __assign({}, rest, {\n    stateReducer: stateReducer,\n    onChange: handleChange,\n    selectedItem: null,\n    keepFilterAfterSelect: true\n  }), function (downshift) {\n    return children(getStateAndHelpers(downshift));\n  });\n}\nexports.MultiDownshift = MultiDownshift;\nMultiDownshift.defaultProps = {\n  selectedItems: [],\n  itemIsEqual: function (a, b) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('MultiDownshift: using a deep compare itemIsEqual implementation for object comparision.' + ' You should probably provide your own `itemIsEqual` implementation.');\n    }\n    return util_1.isEqual(a, b);\n  }\n};\nvar stateReducer = function (state, changes) {\n  var inputValue = changes.inputValue,\n    rest = __rest(changes, [\"inputValue\"]);\n  if (changes.type === undefined && state.isOpen && !changes.isOpen) {\n    // Clear inputValue when select is closed\n    return __assign(__assign({}, changes), {\n      inputValue: ''\n    });\n  }\n  switch (changes.type) {\n    case downshift_1.default.stateChangeTypes.changeInput:\n      return __assign(__assign({}, rest), {\n        inputValue: inputValue\n      });\n    case downshift_1.default.stateChangeTypes.keyDownEnter:\n    case downshift_1.default.stateChangeTypes.clickItem:\n      return __assign(__assign({}, rest), {\n        highlightedIndex: state.highlightedIndex,\n        isOpen: true\n      });\n    default:\n      return rest;\n  }\n};\n//# sourceMappingURL=MultiDownshift.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}